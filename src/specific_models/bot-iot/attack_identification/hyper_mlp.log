Reading ../../../../datasets/bot-iot/UNSW_2018_IoT_Botnet_Full5pc_1.csv
Reading ../../../../datasets/bot-iot/UNSW_2018_IoT_Botnet_Full5pc_2.csv
Reading ../../../../datasets/bot-iot/UNSW_2018_IoT_Botnet_Full5pc_3.csv
Reading ../../../../datasets/bot-iot/UNSW_2018_IoT_Botnet_Full5pc_4.csv
<class 'pandas.core.frame.DataFrame'>
Int64Index: 3668522 entries, 1 to 3668522
Data columns (total 45 columns):
 #   Column                            Dtype  
---  ------                            -----  
 0   stime                             float64
 1   flgs                              object 
 2   flgs_number                       int64  
 3   proto                             object 
 4   proto_number                      int64  
 5   saddr                             object 
 6   sport                             object 
 7   daddr                             object 
 8   dport                             object 
 9   pkts                              int64  
 10  bytes                             int64  
 11  state                             object 
 12  state_number                      int64  
 13  ltime                             float64
 14  seq                               int64  
 15  dur                               float64
 16  mean                              float64
 17  stddev                            float64
 18  sum                               float64
 19  min                               float64
 20  max                               float64
 21  spkts                             int64  
 22  dpkts                             int64  
 23  sbytes                            int64  
 24  dbytes                            int64  
 25  rate                              float64
 26  srate                             float64
 27  drate                             float64
 28  TnBPSrcIP                         int64  
 29  TnBPDstIP                         int64  
 30  TnP_PSrcIP                        int64  
 31  TnP_PDstIP                        int64  
 32  TnP_PerProto                      int64  
 33  TnP_Per_Dport                     int64  
 34  AR_P_Proto_P_SrcIP                float64
 35  AR_P_Proto_P_DstIP                float64
 36  N_IN_Conn_P_DstIP                 int64  
 37  N_IN_Conn_P_SrcIP                 int64  
 38  AR_P_Proto_P_Sport                float64
 39  AR_P_Proto_P_Dport                float64
 40  Pkts_P_State_P_Protocol_P_DestIP  int64  
 41  Pkts_P_State_P_Protocol_P_SrcIP   int64  
 42  attack                            int64  
 43  category                          object 
 44  subcategory                       object 
dtypes: float64(15), int64(21), object(9)
memory usage: 1.3+ GB

Dataframe contains NaN values: False
Number of NaN columns: 0
NaN columns: [] 


Attack types: [1 0]
Attack distribution:
1    3668045
0        477
Name: attack, dtype: int64

Cateogry types: ['DoS' 'DDoS' 'Normal' 'Reconnaissance' 'Theft']
Cateogry distribution:
1    3668045
0        477
Name: attack, dtype: int64

Subcategory types: ['HTTP' 'TCP' 'UDP' 'Normal' 'OS_Fingerprint' 'Service_Scan'
 'Data_Exfiltration' 'Keylogging']
Subcategory distribution:
UDP                  1981230
TCP                  1593180
Service_Scan           73168
OS_Fingerprint         17914
HTTP                    2474
Normal                   477
Keylogging                73
Data_Exfiltration          6
Name: subcategory, dtype: int64

Column | # of different values
stime | 392259
flgs | 9
flgs_number | 9
proto | 5
proto_number | 5
saddr | 21
sport | 65541
daddr | 84
dport | 7698
pkts | 123
bytes | 1633
state | 11
state_number | 11
ltime | 383624
seq | 262212
dur | 612509
mean | 507089
stddev | 421379
sum | 934972
min | 271147
max | 594525
spkts | 91
dpkts | 62
sbytes | 1052
dbytes | 472
rate | 139677
srate | 119709
drate | 20714
TnBPSrcIP | 8639
TnBPDstIP | 7631
TnP_PSrcIP | 1522
TnP_PDstIP | 1587
TnP_PerProto | 1560
TnP_Per_Dport | 1582
AR_P_Proto_P_SrcIP | 46289
AR_P_Proto_P_DstIP | 39186
N_IN_Conn_P_DstIP | 100
N_IN_Conn_P_SrcIP | 100
AR_P_Proto_P_Sport | 136207
AR_P_Proto_P_Dport | 42237
Pkts_P_State_P_Protocol_P_DestIP | 1595
Pkts_P_State_P_Protocol_P_SrcIP | 1526
attack | 2
category | 5
subcategory | 8

Removing attributes that have only one (or zero) sampled value.

Column | # of different values
stime | 392259
flgs | 9
flgs_number | 9
proto | 5
proto_number | 5
saddr | 21
sport | 65541
daddr | 84
dport | 7698
pkts | 123
bytes | 1633
state | 11
state_number | 11
ltime | 383624
seq | 262212
dur | 612509
mean | 507089
stddev | 421379
sum | 934972
min | 271147
max | 594525
spkts | 91
dpkts | 62
sbytes | 1052
dbytes | 472
rate | 139677
srate | 119709
drate | 20714
TnBPSrcIP | 8639
TnBPDstIP | 7631
TnP_PSrcIP | 1522
TnP_PDstIP | 1587
TnP_PerProto | 1560
TnP_Per_Dport | 1582
AR_P_Proto_P_SrcIP | 46289
AR_P_Proto_P_DstIP | 39186
N_IN_Conn_P_DstIP | 100
N_IN_Conn_P_SrcIP | 100
AR_P_Proto_P_Sport | 136207
AR_P_Proto_P_Dport | 42237
Pkts_P_State_P_Protocol_P_DestIP | 1595
Pkts_P_State_P_Protocol_P_SrcIP | 1526
attack | 2
category | 5
subcategory | 8

Removing redundant columns: ['state_number', 'proto_number', 'flgs_number']

Column | NaN values
stime                               0
flgs                                0
proto                               0
saddr                               0
sport                               0
daddr                               0
dport                               0
pkts                                0
bytes                               0
state                               0
ltime                               0
seq                                 0
dur                                 0
mean                                0
stddev                              0
sum                                 0
min                                 0
max                                 0
spkts                               0
dpkts                               0
sbytes                              0
dbytes                              0
rate                                0
srate                               0
drate                               0
TnBPSrcIP                           0
TnBPDstIP                           0
TnP_PSrcIP                          0
TnP_PDstIP                          0
TnP_PerProto                        0
TnP_Per_Dport                       0
AR_P_Proto_P_SrcIP                  0
AR_P_Proto_P_DstIP                  0
N_IN_Conn_P_DstIP                   0
N_IN_Conn_P_SrcIP                   0
AR_P_Proto_P_Sport                  0
AR_P_Proto_P_Dport                  0
Pkts_P_State_P_Protocol_P_DestIP    0
Pkts_P_State_P_Protocol_P_SrcIP     0
attack                              0
category                            0
subcategory                         0
dtype: int64
Removing attributes with more than half NaN values.
Dataframe contains NaN values: False

Column | NaN values (after dropping columns)
stime                               0
flgs                                0
proto                               0
saddr                               0
sport                               0
daddr                               0
dport                               0
pkts                                0
bytes                               0
state                               0
ltime                               0
seq                                 0
dur                                 0
mean                                0
stddev                              0
sum                                 0
min                                 0
max                                 0
spkts                               0
dpkts                               0
sbytes                              0
dbytes                              0
rate                                0
srate                               0
drate                               0
TnBPSrcIP                           0
TnBPDstIP                           0
TnP_PSrcIP                          0
TnP_PDstIP                          0
TnP_PerProto                        0
TnP_Per_Dport                       0
AR_P_Proto_P_SrcIP                  0
AR_P_Proto_P_DstIP                  0
N_IN_Conn_P_DstIP                   0
N_IN_Conn_P_SrcIP                   0
AR_P_Proto_P_Sport                  0
AR_P_Proto_P_Dport                  0
Pkts_P_State_P_Protocol_P_DestIP    0
Pkts_P_State_P_Protocol_P_SrcIP     0
attack                              0
category                            0
subcategory                         0
dtype: int64
stime unique values: 392259
flgs unique values: 9
proto unique values: 9
saddr unique values: 5
sport unique values: 5
daddr unique values: 21
dport unique values: 65541
pkts unique values: 84
bytes unique values: 7698
state unique values: 123
ltime unique values: 1633
seq unique values: 11
dur unique values: 11
mean unique values: 383624
stddev unique values: 262212
sum unique values: 612509
min unique values: 507089
max unique values: 421379
spkts unique values: 934972
dpkts unique values: 271147
sbytes unique values: 594525
dbytes unique values: 91
rate unique values: 62
srate unique values: 1052
drate unique values: 472
TnBPSrcIP unique values: 139677
TnBPDstIP unique values: 119709
TnP_PSrcIP unique values: 20714
TnP_PDstIP unique values: 8639
TnP_PerProto unique values: 7631
TnP_Per_Dport unique values: 1522
AR_P_Proto_P_SrcIP unique values: 1587
AR_P_Proto_P_DstIP unique values: 1560
N_IN_Conn_P_DstIP unique values: 1582
N_IN_Conn_P_SrcIP unique values: 46289
AR_P_Proto_P_Sport unique values: 39186
AR_P_Proto_P_Dport unique values: 100
Pkts_P_State_P_Protocol_P_DestIP unique values: 100
Pkts_P_State_P_Protocol_P_SrcIP unique values: 136207
attack unique values: 42237
category unique values: 1595
subcategory unique values: 1526
<class 'pandas.core.frame.DataFrame'>
Int64Index: 3668522 entries, 1 to 3668522
Columns: 42 entries, stime to subcategory
dtypes: float64(15), int64(18), object(9)
memory usage: 1.2+ GB

Objects: ['flgs', 'proto', 'saddr', 'sport', 'daddr', 'dport', 'state', 'category', 'subcategory'] 


Check for high cardinality.
Column | # of different values | values
flgs | 9 | ['e' 'e s' 'e d' 'e *' 'e g' 'eU' 'e &' 'e   t' 'e  D']
proto | 5 | ['tcp' 'arp' 'udp' 'icmp' 'ipv6-icmp']
saddr | 21 | ['192.168.100.147' '192.168.100.7' '192.168.100.148' '192.168.100.6'
 '192.168.100.149' '192.168.100.150' '192.168.100.5' '192.168.100.3'
 '192.168.100.1' '192.168.100.4' '192.168.100.27'
 'fe80::250:56ff:febe:254' '192.168.100.46' 'fe80::250:56ff:febe:26db'
 'fe80::250:56ff:febe:e9d9' 'fe80::c0c0:aa20:45b9:bdd9'
 'fe80::250:56ff:febe:89ee' 'fe80::2c6a:ff9b:7e14:166a'
 'fe80::250:56ff:febe:bf1a' 'fe80::250:56ff:febe:c038' '192.168.100.55']
sport | 65540 | ['49960' nan '49962' ... '0x0008' '0x000d' '0x0011']
daddr | 84 | ['192.168.100.7' '192.168.100.147' '192.168.100.6' '192.168.100.148'
 '192.168.100.5' '192.168.100.3' '192.168.100.149' '192.168.100.150'
 '192.168.100.4' '27.124.125.250' '192.168.100.1' '192.168.100.27'
 '192.168.217.2' '192.168.100.255' '8.8.8.8' 'ff02::1' '255.255.255.255'
 '13.55.154.73' '192.168.100.55' '184.85.248.65' '205.251.194.167'
 '192.5.5.241' '192.35.51.30' '205.251.195.97' '205.251.196.236'
 '199.7.91.13' '192.12.94.30' '52.35.35.13' '216.239.38.10' '199.7.83.42'
 '192.42.93.30' '172.217.25.170' 'ff02::fb' '224.0.0.251' 'ff02::2'
 '129.250.35.250' '91.189.91.157' '216.239.34.10' '192.52.178.30'
 '224.0.0.252' '96.7.49.66' '205.251.193.2' '192.33.4.12' '192.41.162.30'
 '192.36.148.17' '35.165.2.252' '52.11.124.117' '52.201.147.106'
 '216.239.36.10' '192.112.36.4' '192.31.80.30' '91.189.92.40'
 '128.63.2.53' '202.12.27.33' '192.203.230.10' '192.55.83.30'
 '205.251.198.119' '192.33.14.30' '192.58.128.30' '205.251.196.160'
 '205.251.199.148' '192.54.112.30' '156.154.100.3' '199.19.57.1'
 '205.251.194.86' '205.251.199.194' '205.251.199.61' '205.251.195.185'
 '205.251.194.201' '205.251.198.239' '205.251.193.205' '205.251.196.32'
 '198.41.0.4' '192.48.79.30' '199.19.56.1' '156.154.101.3'
 '205.251.197.206' '205.251.192.170' '205.251.195.59' '205.251.198.91'
 '205.251.194.84' '192.26.92.30' '205.251.194.102' '205.251.194.154']
dport | 7697 | ['80' nan '30551' ... '42052' '2660' '2664']
state | 11 | ['RST' 'CON' 'REQ' 'INT' 'URP' 'FIN' 'ACC' 'NRS' 'ECO' 'TST' 'MAS']
category | 5 | ['DoS' 'DDoS' 'Normal' 'Reconnaissance' 'Theft']
subcategory | 8 | ['HTTP' 'TCP' 'UDP' 'Normal' 'OS_Fingerprint' 'Service_Scan'
 'Data_Exfiltration' 'Keylogging']

Handling categorical attributes (label encoding).
Objects: ['category', 'subcategory']

Dropping category and subcategory.
These are labels for other scenarios.

Splitting dataset (test/train): 0.2

Splitting dataset (validation/train): 0.25
X_train_df shape: (2201112, 37)
y_train_df shape: (2201112,)
X_val_df shape: (733705, 37)
y_val_df shape: (733705,)
X_test_df shape: (733705, 37)
y_test_df shape: (733705,)

Converting dataframe to numpy array.
X_train shape: (2201112, 37)
y_train shape: (2201112,)
X_val shape: (733705, 37)
y_val shape: (733705,)
X_test shape: (733705, 37)
y_test shape: (733705,)

Applying normalization.
4.999745845794678 to normalize data.

Selecting top 2 features.
2.7064414024353027 to select features.
X_train shape: (2201112, 2)
y_train shape: (2201112,)
X_val shape: (733705, 2)
y_val shape: (733705,)
X_test shape: (733705, 2)
y_test shape: (733705,)
Feature 29: 0.029859
Feature 33: 0.185222
Feature 34: 0.318271
Feature 20: 2.363140
Feature 2: 15.018434
Feature 22: 15.269860
Feature 30: 16.069985
Feature 3: 50.339891
Feature 14: 58.368243
Feature 1: 168.873037
Feature 12: 318.015635
Feature 11: 356.817122
Feature 15: 492.278642
Feature 9: 631.017334
Feature 7: 1041.018637
Feature 4: 1643.572870
Feature 32: 1996.955005
Feature 31: 6213.534276
Feature 8: 12482.056032
Feature 0: 12485.495846
Feature 36: 18904.964782
Feature 21: 26396.249059
Feature 35: 32232.711729
Feature 10: 33598.291164
Feature 19: 38205.365387
Feature 17: 39072.763808
Feature 13: 85898.442508
Feature 28: 90361.408269
Feature 6: 105712.853301
Feature 26: 122403.718433
Feature 18: 128866.073074
Feature 25: 132522.935681
Feature 5: 141060.086688
Feature 16: 173103.152301
Feature 24: 190045.634463
Feature 23: 203149.329537
Feature 27: 3854592.805822
Using TensorFlow backend.
y_val:
[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1]
(733705,)
y_val:
[[0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]
 [0. 1.]]
(733705, 2)
y_val:
[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1]
(733705,)

Creating learning model.
Fitting 1 folds for each of 250 candidates, totalling 250 fits
[Parallel(n_jobs=-1)]: Using backend LokyBackend with 32 concurrent workers.
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.01, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.01, weight_constraint=4 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.2, weight_constraint=3 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.2, weight_constraint=4 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.001, weight_constraint=5 [CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.2, weight_constraint=5 

[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.01, weight_constraint=5 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.2, weight_constraint=2 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.001, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.001, weight_constraint=3 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.001, weight_constraint=2 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.3, weight_constraint=4 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.3, weight_constraint=5 
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.001, weight_constraint=2 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.01, weight_constraint=3 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.001, weight_constraint=4 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.1, weight_constraint=4 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.1, weight_constraint=2 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.3, weight_constraint=3 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.1, weight_constraint=3 
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.001, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.3, weight_constraint=2 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.1, weight_constraint=5 
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.001, weight_constraint=5 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.1, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.001, weight_constraint=4 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.3, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.2, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.01, weight_constraint=2 
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.001, weight_constraint=3 
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.01, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.01, weight_constraint=2 
2020-07-05 21:49:37.820534: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.820706: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.820798: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.821628: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.821844: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.821932: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.827177: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.827352: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.827443: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.835469: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.835655: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.835764: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.856107: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.856484: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.856576: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.856693: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.859131: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f8788000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.859216: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.861653: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.863538: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.864138: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.864138: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.864187: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.864187: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.864270: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.864279: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.865176: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fd398000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.865286: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.866082: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f3490000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.866152: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.868228: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.869857: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.869914: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.869974: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.871034: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fde00000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.871109: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.871446: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.871480: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.871529: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.874126: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.874190: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.874245: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.875882: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.876055: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.876159: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.880330: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.880399: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.880451: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.886979: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.890081: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f2de4000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.890159: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.898720: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.900395: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.901885: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fd02c000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.901956: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.903087: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f3330000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.903152: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.904526: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.906076: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.906962: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f6968000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.907020: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.909514: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f6594000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.909568: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.909738: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.909787: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.909839: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.911223: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.912890: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.912903: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.912939: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.912982: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.913826: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f2d44000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.913879: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.915109: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f5c0c000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.915181: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.915424: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.915467: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.915514: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.916369: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.925540: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f3380000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.925623: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.929348: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.929392: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.929425: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.936614: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.938121: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.938167: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.938213: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.940125: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.940186: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.940228: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.942223: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.942267: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.942298: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.943164: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.944103: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.945776: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.945851: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.945893: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.946891: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f1e0c000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.946968: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.946983: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f374c000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.947024: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.949129: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f1bf8000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.949192: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.949470: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.949528: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.949592: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.955350: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.955410: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.955463: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.956925: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.956975: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.957142: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.963753: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.963940: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.964042: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.964802: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.966743: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.967432: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f83ac000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.967484: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.969150: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f7a18000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.969198: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.973903: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:37.973966: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:37.974012: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:37.978293: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.980328: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.980927: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.981303: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f8988000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.981355: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.982899: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fe600000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.982949: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.984709: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f65b8000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.984772: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.986009: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.988665: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f5ffc000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.988729: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:37.992539: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:37.995060: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fb610000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:37.995107: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:38.000408: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:38.000658: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:38.001328: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:38.003564: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f15fc000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:38.003629: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fc3bc000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:38.003699: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:38.003730: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:38.003949: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f582c000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:38.004001: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:38.010727: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:38.010884: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:38.010974: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:38.023966: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:38.024118: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:38.024207: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:38.025042: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:38.025098: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:38.025139: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:38.043401: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:38.043574: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:38.043664: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:38.053071: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:38.053150: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:38.053218: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:38.060523: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:38.063306: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:38.064510: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f7600000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:38.064593: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:38.066492: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:38.068149: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f8378000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:38.068333: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:38.069447: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fe670000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:38.069531: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:38.073622: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:38.073797: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:38.073898: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:38.084901: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:38.087393: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f9728000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:38.087479: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:38.089703: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:38.092307: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fbd98000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:38.092499: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:38.112538: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:38.115218: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f04b0000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:38.115293: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-07-05 21:49:38.148725: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-05 21:49:38.148864: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-05 21:49:38.148946: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-05 21:49:38.201896: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-05 21:49:38.204773: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7f26a4000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-05 21:49:38.204861: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
Epoch 1/3
73371/73371 - 414s - loss: 0.6935 - accuracy: 0.5037
Epoch 2/3
73371/73371 - 415s - loss: 0.6930 - accuracy: 0.3432
Epoch 2/3
73371/73371 - 415s - loss: 0.6931 - accuracy: 0.1516
Epoch 2/3
73371/73371 - 416s - loss: 0.6928 - accuracy: 0.0064
Epoch 2/3
73371/73371 - 417s - loss: 0.6929 - accuracy: 0.4140
Epoch 2/3
73371/73371 - 419s - loss: 0.6935 - accuracy: 0.4851
Epoch 2/3
73371/73371 - 419s - loss: 0.6931 - accuracy: 0.5045
Epoch 2/3
73371/73371 - 419s - loss: 0.6929 - accuracy: 0.4853
Epoch 2/3
73371/73371 - 420s - loss: 0.6932 - accuracy: 0.5035
Epoch 2/3
73371/73371 - 420s - loss: 0.6929 - accuracy: 0.1296
Epoch 2/3
73371/73371 - 421s - loss: 7.7070 - accuracy: 0.9999
Epoch 2/3
73371/73371 - 421s - loss: 0.6931 - accuracy: 0.4975
Epoch 2/3
73371/73371 - 421s - loss: 0.6936 - accuracy: 0.4943
Epoch 2/3
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.0518
Epoch 2/3
73371/73371 - 425s - loss: 0.6930 - accuracy: 0.4955
Epoch 2/3
73371/73371 - 428s - loss: 0.6937 - accuracy: 0.4943
Epoch 2/3
73371/73371 - 429s - loss: 0.6930 - accuracy: 0.4310
Epoch 2/3
73371/73371 - 432s - loss: 0.6937 - accuracy: 0.4910
Epoch 2/3
73371/73371 - 432s - loss: 0.6929 - accuracy: 0.0062
Epoch 2/3
73371/73371 - 432s - loss: 0.6933 - accuracy: 0.4973
Epoch 2/3
73371/73371 - 432s - loss: 0.6929 - accuracy: 0.4807
Epoch 2/3
73371/73371 - 433s - loss: 0.6933 - accuracy: 0.4890
Epoch 2/3
73371/73371 - 435s - loss: 0.6928 - accuracy: 0.4952
Epoch 2/3
73371/73371 - 436s - loss: 0.6935 - accuracy: 0.4871
Epoch 2/3
73371/73371 - 436s - loss: 0.6929 - accuracy: 0.4227
Epoch 2/3
73371/73371 - 436s - loss: 0.6930 - accuracy: 0.4970
Epoch 2/3
73371/73371 - 436s - loss: 0.6929 - accuracy: 0.4932
Epoch 2/3
73371/73371 - 439s - loss: 0.6929 - accuracy: 0.4872
Epoch 2/3
73371/73371 - 441s - loss: 0.6936 - accuracy: 0.4939
Epoch 2/3
73371/73371 - 441s - loss: 0.6929 - accuracy: 0.4316
Epoch 2/3
73371/73371 - 442s - loss: 0.6932 - accuracy: 0.4830
Epoch 2/3
73371/73371 - 444s - loss: 0.6935 - accuracy: 0.4682
Epoch 2/3
73371/73371 - 416s - loss: 0.6929 - accuracy: 0.4997
Epoch 3/3
73371/73371 - 416s - loss: 0.6928 - accuracy: 1.3039e-04
Epoch 3/3
73371/73371 - 420s - loss: 0.6928 - accuracy: 0.2905
Epoch 3/3
73371/73371 - 420s - loss: 0.6928 - accuracy: 1.3039e-04
Epoch 3/3
73371/73371 - 421s - loss: 0.6928 - accuracy: 0.4366
Epoch 3/3
73371/73371 - 420s - loss: 0.6928 - accuracy: 0.5007
Epoch 3/3
73371/73371 - 419s - loss: 0.6928 - accuracy: 1.3039e-04
Epoch 3/3
73371/73371 - 422s - loss: 0.6935 - accuracy: 0.4997
Epoch 3/3
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.4961
Epoch 3/3
73371/73371 - 422s - loss: 0.6928 - accuracy: 1.3039e-04
Epoch 3/3
73371/73371 - 422s - loss: 0.6928 - accuracy: 0.5000
Epoch 3/3
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.5077
Epoch 3/3
73371/73371 - 423s - loss: 7.7071 - accuracy: 0.9999
Epoch 3/3
73371/73371 - 424s - loss: 0.6935 - accuracy: 0.5009
Epoch 3/3
73371/73371 - 421s - loss: 0.6936 - accuracy: 0.4983
Epoch 3/3
73371/73371 - 428s - loss: 0.6929 - accuracy: 0.4994
Epoch 3/3
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.3957
Epoch 3/3
73371/73371 - 425s - loss: 0.6929 - accuracy: 1.3039e-04
Epoch 3/3
73371/73371 - 426s - loss: 0.6932 - accuracy: 0.4991
Epoch 3/3
73371/73371 - 426s - loss: 0.6928 - accuracy: 0.5009
Epoch 3/3
73371/73371 - 429s - loss: 0.6936 - accuracy: 0.4994
Epoch 3/3
73371/73371 - 426s - loss: 0.6928 - accuracy: 0.4491
Epoch 3/3
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.4894
Epoch 3/3
73371/73371 - 422s - loss: 0.6935 - accuracy: 0.5001
Epoch 3/3
73371/73371 - 431s - loss: 0.6929 - accuracy: 0.4994
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.4897
Epoch 3/3
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.4648
Epoch 3/3
73371/73371 - 435s - loss: 0.6929 - accuracy: 0.4994
Epoch 3/3
73371/73371 - 436s - loss: 0.6935 - accuracy: 0.5005
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.5002
Epoch 3/3
73371/73371 - 431s - loss: 0.6935 - accuracy: 0.4933
Epoch 3/3
73371/73371 - 436s - loss: 0.6928 - accuracy: 0.4991
Epoch 3/3
73371/73371 - 415s - loss: 0.6929 - accuracy: 0.5001
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 417s - loss: 0.6928 - accuracy: 1.3039e-04
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 419s - loss: 0.6928 - accuracy: 0.0168
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 419s - loss: 0.6928 - accuracy: 1.3039e-04
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 418s - loss: 0.6928 - accuracy: 0.3853
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 419s - loss: 0.6928 - accuracy: 1.3039e-04
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 420s - loss: 0.6928 - accuracy: 0.4996
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 420s - loss: 0.6928 - accuracy: 1.3039e-04
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 420s - loss: 0.6928 - accuracy: 0.5000
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 421s - loss: 0.6935 - accuracy: 0.5007
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 421s - loss: 0.6928 - accuracy: 0.4999
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 420s - loss: 0.6928 - accuracy: 0.5004
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 420s - loss: 7.7071 - accuracy: 0.9999
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 422s - loss: 0.6935 - accuracy: 0.4990
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 419s - loss: 0.6936 - accuracy: 0.4997
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 423s - loss: 0.6929 - accuracy: 0.4997
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 419s - loss: 0.6929 - accuracy: 1.3039e-04
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.4874
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 420s - loss: 0.6932 - accuracy: 0.4998
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 418s - loss: 0.6936 - accuracy: 0.5000
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 417s - loss: 0.6935 - accuracy: 0.4997
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 420s - loss: 0.6928 - accuracy: 0.4990
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 422s - loss: 0.6928 - accuracy: 0.4727
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 421s - loss: 0.6929 - accuracy: 0.5001
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 420s - loss: 0.6928 - accuracy: 0.4997
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 423s - loss: 0.6928 - accuracy: 0.5004
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 416s - loss: 0.6935 - accuracy: 0.5002
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 420s - loss: 0.6928 - accuracy: 0.4978
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 419s - loss: 0.6929 - accuracy: 0.5000
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 420s - loss: 0.6928 - accuracy: 0.5000
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 417s - loss: 0.6935 - accuracy: 0.5002
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
73371/73371 - 420s - loss: 0.6928 - accuracy: 0.5001
WARNING:tensorflow:From /home/gta/.local/share/virtualenvs/machinelearning-I8jSrdjo/lib/python3.7/site-packages/tensorflow/python/keras/wrappers/scikit_learn.py:241: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.
Instructions for updating:
Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype("int32")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).
24457/24457 - 59s
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.001, weight_constraint=2, total=21.8min
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.01, weight_constraint=3 
Epoch 1/3
24457/24457 - 58s
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.01, weight_constraint=1, total=21.8min
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.01, weight_constraint=4 
Epoch 1/3
24457/24457 - 55s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.001, weight_constraint=4, total=21.9min
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.01, weight_constraint=5 
24457/24457 - 55s
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.1, weight_constraint=2, total=21.9min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.1, weight_constraint=1 
Epoch 1/3
24457/24457 - 54s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.001, weight_constraint=3, total=21.9min
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.1, weight_constraint=2 
24457/24457 - 54s
24457/24457 - 53s
Epoch 1/3
24457/24457 - 53s
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.01, weight_constraint=5, total=22.0min
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.1, weight_constraint=5, total=22.0min
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.1, weight_constraint=3 
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.001, weight_constraint=1, total=22.0min
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.1, weight_constraint=4 
24457/24457 - 53s
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.1, weight_constraint=5 
24457/24457 - 53s
24457/24457 - 53s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.001, weight_constraint=5, total=22.0min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.2, weight_constraint=1 
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.1, weight_constraint=3, total=22.0min
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.001, weight_constraint=4, total=22.0min
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.2, weight_constraint=2 
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.2, weight_constraint=3 
24457/24457 - 53s
24457/24457 - 53s
Epoch 1/3
Epoch 1/3
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.3, weight_constraint=2, total=22.0min
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.001, weight_constraint=3, total=22.0min
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.2, weight_constraint=4 
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.2, weight_constraint=5 
Epoch 1/3
Epoch 1/3
24457/24457 - 52s
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.3, weight_constraint=4, total=22.1min
24457/24457 - 54s
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.3, weight_constraint=1 
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.2, weight_constraint=1, total=22.1min
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.3, weight_constraint=2 
Epoch 1/3
Epoch 1/3
24457/24457 - 53s
24457/24457 - 51s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.001, weight_constraint=1, total=22.2min
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.2, weight_constraint=3, total=22.2min
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.3, weight_constraint=3 
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.3, weight_constraint=4 
24457/24457 - 51s
24457/24457 - 55s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.3, weight_constraint=5, total=22.2min
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.3, weight_constraint=1, total=22.2min
[CV] batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.3, weight_constraint=5 
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.001, weight_constraint=1 
24457/24457 - 52s
24457/24457 - 52s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.2, weight_constraint=2, total=22.3min
24457/24457 - 51s
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.001, weight_constraint=2 
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.2, weight_constraint=4, total=22.3min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.001, weight_constraint=3 
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.1, weight_constraint=1, total=22.3min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.001, weight_constraint=4 
Epoch 1/3
Epoch 1/3
24457/24457 - 52s
24457/24457 - 52s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.001, weight_constraint=2, total=22.3min
24457/24457 - 51s
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.001, weight_constraint=5 
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.01, weight_constraint=2, total=22.3min
24457/24457 - 53s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.01, weight_constraint=1, total=22.4min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.01, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.01, weight_constraint=2 
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.3, weight_constraint=3, total=22.4min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.01, weight_constraint=3 
Epoch 1/3
24457/24457 - 52s
Epoch 1/3
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.2, weight_constraint=5, total=22.4min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.01, weight_constraint=4 
Epoch 1/3
24457/24457 - 54s
24457/24457 - 54s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.001, weight_constraint=5, total=22.5min
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.1, weight_constraint=4, total=22.5min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.01, weight_constraint=5 
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.1, weight_constraint=1 
Epoch 1/3
Epoch 1/3
24457/24457 - 55s
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.01, weight_constraint=2, total=22.5min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.1, weight_constraint=2 
Epoch 1/3
24457/24457 - 59s
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.01, weight_constraint=4, total=22.6min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.1, weight_constraint=3 
Epoch 1/3
24457/24457 - 60s
[CV]  batch_size=30, dropout_rate=0.0, epochs=3, learn_rate=0.01, weight_constraint=3, total=22.7min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.1, weight_constraint=4 
Epoch 1/3
73371/73371 - 414s - loss: 0.6928 - accuracy: 0.4889
Epoch 2/3
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.4927
Epoch 2/3
73371/73371 - 422s - loss: 0.6928 - accuracy: 0.4935
Epoch 2/3
73371/73371 - 424s - loss: 0.6929 - accuracy: 0.4954
Epoch 2/3
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.4917
Epoch 2/3
73371/73371 - 423s - loss: 0.6928 - accuracy: 0.4932
Epoch 2/3
73371/73371 - 423s - loss: 0.6929 - accuracy: 0.4905
Epoch 2/3
73371/73371 - 425s - loss: 0.6929 - accuracy: 0.4978
Epoch 2/3
73371/73371 - 425s - loss: 0.6929 - accuracy: 0.4764
Epoch 2/3
73371/73371 - 425s - loss: 0.6929 - accuracy: 0.4928
Epoch 2/3
73371/73371 - 427s - loss: 0.6929 - accuracy: 0.4951
Epoch 2/3
73371/73371 - 423s - loss: 7.7068 - accuracy: 0.9998
Epoch 2/3
73371/73371 - 430s - loss: 0.6929 - accuracy: 0.4949
Epoch 2/3
73371/73371 - 430s - loss: 0.6929 - accuracy: 0.5005
Epoch 2/3
73371/73371 - 434s - loss: 0.6930 - accuracy: 0.4961
73371/73371 - 427s - loss: 0.6932 - accuracy: 0.4978
Epoch 2/3
Epoch 2/3
73371/73371 - 430s - loss: 0.6937 - accuracy: 0.0634
Epoch 2/3
73371/73371 - 429s - loss: 7.7070 - accuracy: 1.3993e-04
Epoch 2/3
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.3987
Epoch 2/3
73371/73371 - 431s - loss: 0.6929 - accuracy: 0.3895
Epoch 2/3
73371/73371 - 430s - loss: 0.6929 - accuracy: 0.3978
Epoch 2/3
73371/73371 - 427s - loss: 0.6930 - accuracy: 0.4459
Epoch 2/3
73371/73371 - 435s - loss: 0.6929 - accuracy: 0.3773
Epoch 2/3
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.4974
Epoch 2/3
73371/73371 - 429s - loss: 0.6930 - accuracy: 0.3758
Epoch 2/3
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.4193
Epoch 2/3
73371/73371 - 431s - loss: 0.6929 - accuracy: 0.4249
Epoch 2/3
73371/73371 - 433s - loss: 0.6929 - accuracy: 0.4925
Epoch 2/3
73371/73371 - 439s - loss: 0.6935 - accuracy: 0.4886
Epoch 2/3
73371/73371 - 445s - loss: 0.6931 - accuracy: 0.4914
Epoch 2/3
73371/73371 - 440s - loss: 0.6928 - accuracy: 0.4912
Epoch 2/3
73371/73371 - 438s - loss: 0.6928 - accuracy: 0.4955
Epoch 2/3
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.5000
Epoch 3/3
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.5001
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.5004
Epoch 3/3
73371/73371 - 432s - loss: 0.6928 - accuracy: 0.4994
Epoch 3/3
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.5010
Epoch 3/3
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.4973
Epoch 3/3
73371/73371 - 434s - loss: 0.6928 - accuracy: 0.5002
Epoch 3/3
73371/73371 - 430s - loss: 0.6928 - accuracy: 0.5008
Epoch 3/3
73371/73371 - 424s - loss: 7.7071 - accuracy: 0.9999
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.5014
Epoch 3/3
73371/73371 - 435s - loss: 0.6929 - accuracy: 0.4993
Epoch 3/3
73371/73371 - 437s - loss: 0.6928 - accuracy: 0.5005
Epoch 3/3
73371/73371 - 435s - loss: 0.6928 - accuracy: 0.4998
Epoch 3/3
73371/73371 - 436s - loss: 0.6928 - accuracy: 0.5005
Epoch 3/3
73371/73371 - 428s - loss: 0.6929 - accuracy: 0.5007
Epoch 3/3
73371/73371 - 429s - loss: 7.7071 - accuracy: 1.3039e-04
Epoch 3/3
73371/73371 - 432s - loss: 0.6935 - accuracy: 1.3084e-04
Epoch 3/3
73371/73371 - 430s - loss: 0.6928 - accuracy: 0.4339
Epoch 3/3
73371/73371 - 437s - loss: 0.6929 - accuracy: 0.4995
Epoch 3/3
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.2986
Epoch 3/3
73371/73371 - 431s - loss: 0.6928 - accuracy: 0.3448
Epoch 3/3
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.3973
Epoch 3/3
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.4999
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.4668
Epoch 3/3
73371/73371 - 431s - loss: 0.6928 - accuracy: 0.3448
Epoch 3/3
73371/73371 - 432s - loss: 0.6928 - accuracy: 0.4995
Epoch 3/3
73371/73371 - 439s - loss: 0.6928 - accuracy: 0.3948
Epoch 3/3
73371/73371 - 433s - loss: 0.6929 - accuracy: 0.4991
Epoch 3/3
73371/73371 - 437s - loss: 0.6935 - accuracy: 0.5003
Epoch 3/3
73371/73371 - 436s - loss: 0.6929 - accuracy: 0.5002
Epoch 3/3
73371/73371 - 440s - loss: 0.6928 - accuracy: 0.4994
Epoch 3/3
73371/73371 - 437s - loss: 0.6928 - accuracy: 0.5001
Epoch 3/3
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.4995
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.4998
73371/73371 - 430s - loss: 0.6928 - accuracy: 0.4994
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.4996
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.4991
73371/73371 - 428s - loss: 0.6929 - accuracy: 0.5003
73371/73371 - 426s - loss: 0.6928 - accuracy: 0.4999
73371/73371 - 427s - loss: 7.7071 - accuracy: 0.9999
73371/73371 - 431s - loss: 0.6928 - accuracy: 0.4996
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.5005
73371/73371 - 432s - loss: 0.6929 - accuracy: 0.5001
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.5001
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.5000
73371/73371 - 427s - loss: 0.6929 - accuracy: 0.5008
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.4994
73371/73371 - 426s - loss: 7.7071 - accuracy: 1.3039e-04
73371/73371 - 426s - loss: 0.6928 - accuracy: 0.2825
73371/73371 - 424s - loss: 0.6928 - accuracy: 0.3505
73371/73371 - 424s - loss: 0.6928 - accuracy: 0.1916
73371/73371 - 428s - loss: 0.6935 - accuracy: 0.1038
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.4666
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.5005
73371/73371 - 428s - loss: 0.6929 - accuracy: 0.5004
73371/73371 - 426s - loss: 0.6928 - accuracy: 0.3980
73371/73371 - 422s - loss: 0.6928 - accuracy: 0.4931
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.4901
73371/73371 - 423s - loss: 0.6928 - accuracy: 0.4713
73371/73371 - 421s - loss: 0.6929 - accuracy: 0.4879
24457/24457 - 67s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.01, weight_constraint=3, total=22.3min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.1, weight_constraint=5 
73371/73371 - 414s - loss: 0.6929 - accuracy: 0.4985
Epoch 1/3
73371/73371 - 417s - loss: 0.6935 - accuracy: 0.5000
24457/24457 - 61s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.01, weight_constraint=5, total=22.4min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.2, weight_constraint=1 
Epoch 1/3
24457/24457 - 59s
73371/73371 - 413s - loss: 0.6928 - accuracy: 0.4998
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.01, weight_constraint=4, total=22.4min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.2, weight_constraint=2 
73371/73371 - 417s - loss: 0.6928 - accuracy: 0.4986
Epoch 1/3
24457/24457 - 57s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.1, weight_constraint=5, total=22.3min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.2, weight_constraint=3 
24457/24457 - 58s
24457/24457 - 57s
24457/24457 - 58s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.1, weight_constraint=2, total=22.4min
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.1, weight_constraint=3, total=22.4min
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.2, weight_constraint=1, total=22.3min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.2, weight_constraint=4 
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.2, weight_constraint=5 
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.3, weight_constraint=1 
24457/24457 - 55s
Epoch 1/3
Epoch 1/3
24457/24457 - 58s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.1, weight_constraint=1, total=22.5min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.3, weight_constraint=2 
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.3, weight_constraint=1, total=22.3min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.3, weight_constraint=3 
Epoch 1/3
Epoch 1/3
24457/24457 - 55s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.2, weight_constraint=2, total=22.4min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.3, weight_constraint=4 
Epoch 1/3
24457/24457 - 55s
24457/24457 - 54s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.1, weight_constraint=4, total=22.5min
[CV] batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.3, weight_constraint=5 
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.2, weight_constraint=3, total=22.5min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.001, weight_constraint=1 
Epoch 1/3
Epoch 1/3
24457/24457 - 54s
24457/24457 - 54s
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.2, weight_constraint=4, total=22.5min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.001, weight_constraint=2 
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.3, weight_constraint=3, total=22.3min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.001, weight_constraint=3 
Epoch 1/3
24457/24457 - 55s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.2, weight_constraint=5, total=22.6min
24457/24457 - 52s
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.001, weight_constraint=4 
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.3, weight_constraint=5, total=22.3min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.001, weight_constraint=5 
Epoch 1/3
24457/24457 - 53s
24457/24457 - 53s
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.001, weight_constraint=5, total=22.3min
24457/24457 - 53s
24457/24457 - 53s
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.01, weight_constraint=1 
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.001, weight_constraint=3, total=22.4min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.01, weight_constraint=2 
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.01, weight_constraint=1, total=22.3min
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.3, weight_constraint=4, total=22.4min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.01, weight_constraint=3 
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.01, weight_constraint=4 
Epoch 1/3
24457/24457 - 53s
24457/24457 - 54s
Epoch 1/3
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.01, weight_constraint=2, total=22.3min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.01, weight_constraint=5 
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.001, weight_constraint=4, total=22.4min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.1, weight_constraint=1 
Epoch 1/3
24457/24457 - 54s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.001, weight_constraint=2, total=22.5min
24457/24457 - 56s
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.1, weight_constraint=2 
[CV]  batch_size=30, dropout_rate=0.1, epochs=3, learn_rate=0.3, weight_constraint=2, total=22.6min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.1, weight_constraint=3 
24457/24457 - 54s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.01, weight_constraint=4, total=22.4min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.1, weight_constraint=4 
Epoch 1/3
24457/24457 - 54s
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.01, weight_constraint=3, total=22.4min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.1, weight_constraint=5 
Epoch 1/3
24457/24457 - 59s
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.001, weight_constraint=1, total=22.7min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.2, weight_constraint=1 
Epoch 1/3
24457/24457 - 58s
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.01, weight_constraint=5, total=22.5min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.2, weight_constraint=2 
Epoch 1/3
24457/24457 - 64s
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.1, weight_constraint=2, total=22.7min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.2, weight_constraint=3 
24457/24457 - 67s
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.1, weight_constraint=1, total=22.8min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.2, weight_constraint=4 
Epoch 1/3
24457/24457 - 69s
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.1, weight_constraint=4, total=22.7min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.2, weight_constraint=5 
24457/24457 - 69s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.1, weight_constraint=3, total=22.9min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.3, weight_constraint=1 
Epoch 1/3
73371/73371 - 407s - loss: 0.6929 - accuracy: 0.4829
Epoch 2/3
73371/73371 - 418s - loss: 0.6929 - accuracy: 0.4881
Epoch 2/3
73371/73371 - 420s - loss: 0.6929 - accuracy: 0.4926
Epoch 2/3
73371/73371 - 418s - loss: 7.7069 - accuracy: 0.9999
Epoch 2/3
73371/73371 - 424s - loss: 0.6931 - accuracy: 0.4921
Epoch 2/3
73371/73371 - 423s - loss: 0.6930 - accuracy: 0.4864
Epoch 2/3
73371/73371 - 422s - loss: 5.7214 - accuracy: 0.8515
Epoch 2/3
73371/73371 - 423s - loss: 0.6929 - accuracy: 0.4956
Epoch 2/3
73371/73371 - 427s - loss: 0.6935 - accuracy: 0.4948
Epoch 2/3
73371/73371 - 428s - loss: 0.6947 - accuracy: 0.1459
Epoch 2/3
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.3962
Epoch 2/3
73371/73371 - 426s - loss: 0.6932 - accuracy: 0.4990
Epoch 2/3
73371/73371 - 424s - loss: 0.6929 - accuracy: 0.3528
Epoch 2/3
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.3919
Epoch 2/3
73371/73371 - 431s - loss: 0.6929 - accuracy: 0.3458
Epoch 2/3
73371/73371 - 424s - loss: 0.6930 - accuracy: 0.4477
Epoch 2/3
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.4837
Epoch 2/3
73371/73371 - 427s - loss: 0.6930 - accuracy: 0.4534
Epoch 2/3
73371/73371 - 433s - loss: 0.6929 - accuracy: 0.3497
Epoch 2/3
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.4834
Epoch 2/3
73371/73371 - 427s - loss: 0.6929 - accuracy: 0.4906
Epoch 2/3
73371/73371 - 428s - loss: 0.6935 - accuracy: 0.4921
Epoch 2/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.4691
Epoch 2/3
73371/73371 - 426s - loss: 0.6928 - accuracy: 0.4892
Epoch 2/3
73371/73371 - 431s - loss: 0.6929 - accuracy: 0.4881
Epoch 2/3
73371/73371 - 439s - loss: 0.6929 - accuracy: 0.4894
Epoch 2/3
73371/73371 - 431s - loss: 0.6928 - accuracy: 0.4963
Epoch 2/3
73371/73371 - 441s - loss: 0.6931 - accuracy: 0.4909
Epoch 2/3
73371/73371 - 437s - loss: 0.6935 - accuracy: 0.4926
Epoch 2/3
73371/73371 - 441s - loss: 0.6929 - accuracy: 0.4995
Epoch 2/3
73371/73371 - 441s - loss: 0.6932 - accuracy: 0.4680
Epoch 2/3
73371/73371 - 442s - loss: 0.6931 - accuracy: 0.4944
Epoch 2/3
73371/73371 - 426s - loss: 0.6928 - accuracy: 0.2593
Epoch 3/3
73371/73371 - 431s - loss: 0.6928 - accuracy: 0.5011
Epoch 3/3
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.5005
Epoch 3/3
73371/73371 - 433s - loss: 0.6930 - accuracy: 0.4982
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.4997
Epoch 3/3
73371/73371 - 435s - loss: 7.7071 - accuracy: 0.9999
Epoch 3/3
73371/73371 - 434s - loss: 7.7071 - accuracy: 0.9999
Epoch 3/3
73371/73371 - 432s - loss: 0.6929 - accuracy: 0.4998
Epoch 3/3
73371/73371 - 435s - loss: 0.6935 - accuracy: 0.4960
Epoch 3/3
73371/73371 - 434s - loss: 0.6946 - accuracy: 0.5000
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.3854
Epoch 3/3
73371/73371 - 433s - loss: 0.6929 - accuracy: 0.5006
Epoch 3/3
73371/73371 - 432s - loss: 0.6928 - accuracy: 0.2044
Epoch 3/3
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.1121
Epoch 3/3
73371/73371 - 434s - loss: 0.6928 - accuracy: 0.4337
Epoch 3/3
73371/73371 - 430s - loss: 0.6928 - accuracy: 0.4787
Epoch 3/3
73371/73371 - 436s - loss: 0.6928 - accuracy: 0.3758
Epoch 3/3
73371/73371 - 434s - loss: 0.6928 - accuracy: 0.4882
Epoch 3/3
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.5012
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.5002
Epoch 3/3
73371/73371 - 432s - loss: 0.6936 - accuracy: 0.4807
Epoch 3/3
73371/73371 - 436s - loss: 0.6928 - accuracy: 0.3566
Epoch 3/3
73371/73371 - 431s - loss: 0.6928 - accuracy: 0.4968
Epoch 3/3
73371/73371 - 430s - loss: 0.6928 - accuracy: 0.5000
Epoch 3/3
73371/73371 - 431s - loss: 0.6928 - accuracy: 0.4997
Epoch 3/3
73371/73371 - 432s - loss: 0.6928 - accuracy: 0.4997
Epoch 3/3
73371/73371 - 440s - loss: 0.6929 - accuracy: 0.5001
Epoch 3/3
73371/73371 - 439s - loss: 0.6929 - accuracy: 0.5007
Epoch 3/3
73371/73371 - 437s - loss: 0.6938 - accuracy: 0.5003
Epoch 3/3
73371/73371 - 436s - loss: 0.6929 - accuracy: 0.2665
Epoch 3/3
73371/73371 - 439s - loss: 0.6930 - accuracy: 0.4996
Epoch 3/3
73371/73371 - 442s - loss: 0.6929 - accuracy: 0.5000
Epoch 3/3
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.5003
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.4991
73371/73371 - 434s - loss: 0.6929 - accuracy: 0.4994
73371/73371 - 429s - loss: 7.7071 - accuracy: 0.9999
73371/73371 - 430s - loss: 0.6928 - accuracy: 0.5001
73371/73371 - 432s - loss: 0.6928 - accuracy: 0.4982
73371/73371 - 429s - loss: 7.7071 - accuracy: 0.9999
73371/73371 - 430s - loss: 0.6929 - accuracy: 0.4998
73371/73371 - 432s - loss: 0.6934 - accuracy: 0.4994
73371/73371 - 430s - loss: 0.6946 - accuracy: 0.4998
73371/73371 - 424s - loss: 0.6928 - accuracy: 0.3958
73371/73371 - 430s - loss: 0.6928 - accuracy: 0.4199
73371/73371 - 430s - loss: 0.6929 - accuracy: 0.5000
73371/73371 - 424s - loss: 0.6928 - accuracy: 0.3516
73371/73371 - 430s - loss: 0.6928 - accuracy: 0.2274
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.4627
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.0525
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.4998
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.3247
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.5002
73371/73371 - 426s - loss: 0.6932 - accuracy: 0.4840
73371/73371 - 424s - loss: 0.6928 - accuracy: 0.4915
73371/73371 - 424s - loss: 0.6928 - accuracy: 0.4999
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.3105
73371/73371 - 423s - loss: 0.6928 - accuracy: 0.4990
24457/24457 - 72s
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.1, weight_constraint=5, total=22.3min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.3, weight_constraint=2 
73371/73371 - 418s - loss: 0.6928 - accuracy: 0.4975
Epoch 1/3
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.5012
73371/73371 - 417s - loss: 0.6928 - accuracy: 0.4995
24457/24457 - 62s
24457/24457 - 61s
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.2, weight_constraint=5, total=22.4min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.3, weight_constraint=3 
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.2, weight_constraint=1, total=22.5min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.3, weight_constraint=4 
Epoch 1/3
Epoch 1/3
24457/24457 - 59s
24457/24457 - 58s
73371/73371 - 413s - loss: 0.6937 - accuracy: 0.4992
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.3, weight_constraint=3, total=22.4min
[CV] batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.3, weight_constraint=5 
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.2, weight_constraint=3, total=22.5min
24457/24457 - 58s
24457/24457 - 58s
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.001, weight_constraint=1 
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.2, weight_constraint=2, total=22.5min
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.3, weight_constraint=1, total=22.5min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.001, weight_constraint=2 
73371/73371 - 410s - loss: 0.6928 - accuracy: 1.2948e-04
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.001, weight_constraint=3 
Epoch 1/3
24457/24457 - 58s
Epoch 1/3
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.3, weight_constraint=2, total=22.4min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.001, weight_constraint=4 
Epoch 1/3
24457/24457 - 58s
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.2, weight_constraint=4, total=22.6min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.001, weight_constraint=5 
73371/73371 - 405s - loss: 0.6929 - accuracy: 0.5014
Epoch 1/3
24457/24457 - 55s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.01, weight_constraint=4, total=22.3min
24457/24457 - 57s
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.01, weight_constraint=1 
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.3, weight_constraint=4, total=22.6min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.01, weight_constraint=2 
Epoch 1/3
24457/24457 - 55s
24457/24457 - 56s
24457/24457 - 57s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.01, weight_constraint=2, total=22.3min
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.001, weight_constraint=3, total=22.4min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.01, weight_constraint=3 
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.01, weight_constraint=4 
24457/24457 - 57s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.001, weight_constraint=1, total=22.5min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.01, weight_constraint=5 
Epoch 1/3
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.2, epochs=3, learn_rate=0.3, weight_constraint=5, total=22.5min
24457/24457 - 55s
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.1, weight_constraint=1 
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.001, weight_constraint=5, total=22.4min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.1, weight_constraint=2 
73371/73371 - 405s - loss: 0.6929 - accuracy: 0.5005
Epoch 1/3
24457/24457 - 55s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.1, weight_constraint=2, total=22.3min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.1, weight_constraint=3 
24457/24457 - 55s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.01, weight_constraint=1, total=22.5min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.1, weight_constraint=4 
24457/24457 - 55s
24457/24457 - 55s
24457/24457 - 56s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.1, weight_constraint=1, total=22.4min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.1, weight_constraint=5 
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.01, weight_constraint=3, total=22.5min
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.001, weight_constraint=2, total=22.6min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.2, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.2, weight_constraint=2 
Epoch 1/3
24457/24457 - 55s
Epoch 1/3
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.01, weight_constraint=5, total=22.5min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.2, weight_constraint=3 
24457/24457 - 55s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.1, weight_constraint=5, total=22.4min
24457/24457 - 55s
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.2, weight_constraint=4 
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.1, weight_constraint=4, total=22.4min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.2, weight_constraint=5 
24457/24457 - 57s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.001, weight_constraint=4, total=22.6min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.3, weight_constraint=1 
Epoch 1/3
24457/24457 - 61s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.2, weight_constraint=2, total=22.5min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.3, weight_constraint=2 
Epoch 1/3
24457/24457 - 64s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.1, weight_constraint=3, total=22.8min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.3, weight_constraint=3 
Epoch 1/3
24457/24457 - 67s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.2, weight_constraint=1, total=22.8min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.3, weight_constraint=4 
Epoch 1/3
24457/24457 - 71s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.2, weight_constraint=3, total=22.7min
[CV] batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.3, weight_constraint=5 
Epoch 1/3
24457/24457 - 73s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.2, weight_constraint=4, total=22.7min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.001, weight_constraint=1 
Epoch 1/3
24457/24457 - 75s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.2, weight_constraint=5, total=22.8min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.001, weight_constraint=2 
Epoch 1/3
24457/24457 - 79s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.3, weight_constraint=1, total=22.9min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.001, weight_constraint=3 
Epoch 1/3
73371/73371 - 403s - loss: 0.6936 - accuracy: 0.4940
Epoch 2/3
73371/73371 - 414s - loss: 0.6930 - accuracy: 0.4961
Epoch 2/3
73371/73371 - 418s - loss: 0.6937 - accuracy: 0.4957
Epoch 2/3
73371/73371 - 414s - loss: 0.6930 - accuracy: 0.4943
Epoch 2/3
73371/73371 - 420s - loss: 0.6929 - accuracy: 0.3668
Epoch 2/3
73371/73371 - 421s - loss: 0.6929 - accuracy: 0.3638
Epoch 2/3
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.3324
Epoch 2/3
73371/73371 - 425s - loss: 0.6929 - accuracy: 0.3500
Epoch 2/3
73371/73371 - 418s - loss: 0.6929 - accuracy: 0.4690
Epoch 2/3
73371/73371 - 423s - loss: 0.6929 - accuracy: 0.2816
Epoch 2/3
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.4862
Epoch 2/3
73371/73371 - 421s - loss: 0.6931 - accuracy: 0.3958
Epoch 2/3
73371/73371 - 419s - loss: 0.6930 - accuracy: 0.4857
Epoch 2/3
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.4850
Epoch 2/3
73371/73371 - 421s - loss: 0.6934 - accuracy: 0.4832
Epoch 2/3
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.4870
Epoch 2/3
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.4898
Epoch 2/3
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.4396
Epoch 2/3
73371/73371 - 422s - loss: 0.6930 - accuracy: 0.4796
Epoch 2/3
73371/73371 - 424s - loss: 0.6930 - accuracy: 0.4943
Epoch 2/3
73371/73371 - 424s - loss: 0.6931 - accuracy: 0.4902
Epoch 2/3
73371/73371 - 424s - loss: 0.6930 - accuracy: 0.4933
Epoch 2/3
73371/73371 - 425s - loss: 0.6930 - accuracy: 0.4854
Epoch 2/3
73371/73371 - 432s - loss: 0.6932 - accuracy: 0.4905
Epoch 2/3
73371/73371 - 432s - loss: 0.6932 - accuracy: 0.4948
Epoch 2/3
73371/73371 - 428s - loss: 0.6936 - accuracy: 0.4914
Epoch 2/3
73371/73371 - 439s - loss: 0.6930 - accuracy: 0.4960
Epoch 2/3
73371/73371 - 437s - loss: 0.6930 - accuracy: 0.4926
Epoch 2/3
73371/73371 - 437s - loss: 0.6939 - accuracy: 0.4836
Epoch 2/3
73371/73371 - 439s - loss: 0.6929 - accuracy: 0.3169
Epoch 2/3
73371/73371 - 438s - loss: 0.6929 - accuracy: 0.3677
Epoch 2/3
73371/73371 - 441s - loss: 0.6929 - accuracy: 0.3028
Epoch 2/3
73371/73371 - 429s - loss: 0.6935 - accuracy: 0.4987
Epoch 3/3
73371/73371 - 425s - loss: 0.6929 - accuracy: 0.5001
Epoch 3/3
73371/73371 - 431s - loss: 0.6929 - accuracy: 0.5003
Epoch 3/3
73371/73371 - 434s - loss: 0.6935 - accuracy: 0.4997
Epoch 3/3
73371/73371 - 432s - loss: 0.6928 - accuracy: 0.3370
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.3402
Epoch 3/3
73371/73371 - 434s - loss: 0.6928 - accuracy: 0.2280
Epoch 3/3
73371/73371 - 427s - loss: 0.6929 - accuracy: 0.4830
Epoch 3/3
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.5002
Epoch 3/3
73371/73371 - 436s - loss: 0.6928 - accuracy: 0.2779
Epoch 3/3
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.3932
Epoch 3/3
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.4328
Epoch 3/3
73371/73371 - 434s - loss: 0.6928 - accuracy: 0.2580
Epoch 3/3
73371/73371 - 427s - loss: 0.6932 - accuracy: 0.4949
Epoch 3/3
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.4999
Epoch 3/3
73371/73371 - 435s - loss: 0.6928 - accuracy: 0.5000
Epoch 3/3
73371/73371 - 430s - loss: 0.6929 - accuracy: 0.5001
Epoch 3/3
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.4999
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.5002
Epoch 3/3
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.4983
Epoch 3/3
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.4992
Epoch 3/3
73371/73371 - 436s - loss: 0.6928 - accuracy: 0.5006
Epoch 3/3
73371/73371 - 428s - loss: 0.6929 - accuracy: 0.5000
Epoch 3/3
73371/73371 - 438s - loss: 0.6931 - accuracy: 0.4995
Epoch 3/3
73371/73371 - 437s - loss: 0.6929 - accuracy: 0.4996
Epoch 3/3
73371/73371 - 431s - loss: 0.6934 - accuracy: 0.5004
Epoch 3/3
73371/73371 - 441s - loss: 0.6929 - accuracy: 0.4996
Epoch 3/3
73371/73371 - 438s - loss: 0.6929 - accuracy: 0.5000
Epoch 3/3
73371/73371 - 437s - loss: 0.6937 - accuracy: 0.5004
Epoch 3/3
73371/73371 - 441s - loss: 0.6928 - accuracy: 0.2498
Epoch 3/3
73371/73371 - 438s - loss: 0.6928 - accuracy: 0.2540
Epoch 3/3
73371/73371 - 436s - loss: 0.6928 - accuracy: 0.1965
Epoch 3/3
73371/73371 - 430s - loss: 0.6931 - accuracy: 0.4985
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.4995
73371/73371 - 427s - loss: 0.6929 - accuracy: 0.5000
73371/73371 - 431s - loss: 0.6936 - accuracy: 0.5002
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.3560
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.3231
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.4936
73371/73371 - 430s - loss: 0.6928 - accuracy: 0.3567
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.5003
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.3158
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.4913
73371/73371 - 430s - loss: 0.6928 - accuracy: 0.3942
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.5010
73371/73371 - 424s - loss: 0.6929 - accuracy: 0.4938
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.3003
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.5000
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.4995
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.4997
73371/73371 - 423s - loss: 0.6929 - accuracy: 0.4999
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.4970
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.3927
73371/73371 - 423s - loss: 0.6929 - accuracy: 0.4994
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.5008
24457/24457 - 75s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.3, weight_constraint=2, total=22.3min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.001, weight_constraint=4 
Epoch 1/3
73371/73371 - 424s - loss: 0.6932 - accuracy: 0.4998
73371/73371 - 418s - loss: 0.6934 - accuracy: 0.4994
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.5005
24457/24457 - 64s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.3, weight_constraint=5, total=22.3min
[Parallel(n_jobs=-1)]: Done  98 tasks      | elapsed: 89.1min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.001, weight_constraint=5 
24457/24457 - 65s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.3, weight_constraint=4, total=22.3min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.01, weight_constraint=1 
Epoch 1/3
24457/24457 - 61s
[CV]  batch_size=30, dropout_rate=0.3, epochs=3, learn_rate=0.3, weight_constraint=3, total=22.5min
73371/73371 - 411s - loss: 0.6929 - accuracy: 0.5001
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.01, weight_constraint=2 
Epoch 1/3
24457/24457 - 60s
24457/24457 - 60s
24457/24457 - 59s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.001, weight_constraint=4, total=22.4min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.01, weight_constraint=3 
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.001, weight_constraint=1, total=22.4min
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.01, weight_constraint=3, total=22.2min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.01, weight_constraint=4 
73371/73371 - 409s - loss: 0.6929 - accuracy: 0.4997
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.01, weight_constraint=5 
Epoch 1/3
Epoch 1/3
Epoch 1/3
24457/24457 - 59s
24457/24457 - 59s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.001, weight_constraint=3, total=22.5min
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.1, weight_constraint=2, total=22.2min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.1, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.1, weight_constraint=2 
Epoch 1/3
Epoch 1/3
24457/24457 - 57s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.01, weight_constraint=4, total=22.3min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.1, weight_constraint=3 
24457/24457 - 57s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.01, weight_constraint=1, total=22.4min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.1, weight_constraint=4 
24457/24457 - 57s
24457/24457 - 57s
24457/24457 - 58s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.1, weight_constraint=4, total=22.2min
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.1, weight_constraint=3, total=22.3min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.1, weight_constraint=5 
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.2, weight_constraint=1 
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.001, weight_constraint=2, total=22.6min
73371/73371 - 405s - loss: 0.6937 - accuracy: 0.5000
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.2, weight_constraint=2 
Epoch 1/3
Epoch 1/3
24457/24457 - 58s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.001, weight_constraint=5, total=22.5min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.2, weight_constraint=3 
24457/24457 - 56s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.1, weight_constraint=5, total=22.3min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.2, weight_constraint=4 
Epoch 1/3
24457/24457 - 56s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.2, weight_constraint=4, total=22.3min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.2, weight_constraint=5 
Epoch 1/3
24457/24457 - 58s
24457/24457 - 59s
24457/24457 - 57s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.2, weight_constraint=3, total=22.3min
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.01, weight_constraint=2, total=22.5min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.3, weight_constraint=1 
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.2, weight_constraint=1, total=22.4min
24457/24457 - 57s
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.3, weight_constraint=2 
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.3, weight_constraint=3 
24457/24457 - 59s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.2, weight_constraint=5, total=22.3min
Epoch 1/3
Epoch 1/3
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.3, weight_constraint=4 
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.1, weight_constraint=1, total=22.5min
[CV] batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.3, weight_constraint=5 
Epoch 1/3
73371/73371 - 406s - loss: 0.6928 - accuracy: 0.3085
Epoch 1/3
24457/24457 - 60s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.01, weight_constraint=5, total=22.6min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.001, weight_constraint=1 
73371/73371 - 404s - loss: 0.6928 - accuracy: 0.2845
Epoch 1/3
73371/73371 - 403s - loss: 0.6928 - accuracy: 0.2905
24457/24457 - 63s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.2, weight_constraint=2, total=22.7min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.001, weight_constraint=2 
24457/24457 - 63s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.3, weight_constraint=2, total=22.4min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.001, weight_constraint=3 
Epoch 1/3
24457/24457 - 64s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.3, weight_constraint=1, total=22.7min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.001, weight_constraint=4 
Epoch 1/3
24457/24457 - 74s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.3, weight_constraint=3, total=22.8min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.001, weight_constraint=5 
Epoch 1/3
24457/24457 - 76s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.3, weight_constraint=4, total=22.8min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.01, weight_constraint=1 
Epoch 1/3
24457/24457 - 77s
[CV]  batch_size=30, dropout_rate=0.4, epochs=3, learn_rate=0.3, weight_constraint=5, total=22.7min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.01, weight_constraint=2 
Epoch 1/3
24457/24457 - 81s
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.001, weight_constraint=1, total=22.9min
24457/24457 - 78s
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.01, weight_constraint=3 
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.001, weight_constraint=2, total=22.7min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.01, weight_constraint=4 
Epoch 1/3
Epoch 1/3
24457/24457 - 81s
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.001, weight_constraint=3, total=22.8min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.01, weight_constraint=5 
Epoch 1/3
73371/73371 - 402s - loss: 0.6929 - accuracy: 0.3465
Epoch 2/3
73371/73371 - 413s - loss: 0.6929 - accuracy: 0.3190
Epoch 2/3
73371/73371 - 415s - loss: 0.6935 - accuracy: 0.4234
Epoch 2/3
73371/73371 - 412s - loss: 0.6929 - accuracy: 0.4456
Epoch 2/3
73371/73371 - 418s - loss: 0.6931 - accuracy: 0.3996
Epoch 2/3
73371/73371 - 415s - loss: 0.6928 - accuracy: 0.4961
Epoch 2/3
73371/73371 - 419s - loss: 0.6928 - accuracy: 0.3070
Epoch 2/3
73371/73371 - 419s - loss: 0.6928 - accuracy: 0.4833
Epoch 2/3
73371/73371 - 419s - loss: 0.6929 - accuracy: 0.4891
Epoch 2/3
73371/73371 - 417s - loss: 0.6933 - accuracy: 0.4895
Epoch 2/3
73371/73371 - 417s - loss: 0.6932 - accuracy: 0.4908
Epoch 2/3
73371/73371 - 419s - loss: 0.6929 - accuracy: 0.4357
Epoch 2/3
73371/73371 - 418s - loss: 0.6928 - accuracy: 0.4929
Epoch 2/3
73371/73371 - 423s - loss: 0.6930 - accuracy: 0.4903
Epoch 2/3
73371/73371 - 422s - loss: 0.6930 - accuracy: 0.4936
Epoch 2/3
73371/73371 - 420s - loss: 0.6929 - accuracy: 0.4903
Epoch 2/3
73371/73371 - 422s - loss: 0.6936 - accuracy: 0.4927
Epoch 2/3
73371/73371 - 418s - loss: 0.6944 - accuracy: 0.4905
Epoch 2/3
73371/73371 - 418s - loss: 0.6937 - accuracy: 0.4842
Epoch 2/3
73371/73371 - 421s - loss: 0.6984 - accuracy: 0.4866
Epoch 2/3
73371/73371 - 427s - loss: 0.6934 - accuracy: 0.4934
Epoch 2/3
73371/73371 - 426s - loss: 6.3971 - accuracy: 0.8755
Epoch 2/3
73371/73371 - 428s - loss: 0.6929 - accuracy: 0.3477
Epoch 2/3
73371/73371 - 425s - loss: 0.6929 - accuracy: 0.3455
Epoch 2/3
73371/73371 - 434s - loss: 0.6929 - accuracy: 0.3474
Epoch 2/3
73371/73371 - 434s - loss: 0.6929 - accuracy: 0.3228
Epoch 2/3
73371/73371 - 440s - loss: 0.6929 - accuracy: 0.3525
Epoch 2/3
73371/73371 - 438s - loss: 0.6929 - accuracy: 0.4506
Epoch 2/3
73371/73371 - 436s - loss: 0.6931 - accuracy: 0.3769
Epoch 2/3
73371/73371 - 436s - loss: 0.6930 - accuracy: 0.3659
Epoch 2/3
73371/73371 - 446s - loss: 0.6929 - accuracy: 0.3856
Epoch 2/3
73371/73371 - 439s - loss: 0.6930 - accuracy: 0.3506
Epoch 2/3
73371/73371 - 432s - loss: 0.6928 - accuracy: 0.2861
Epoch 3/3
73371/73371 - 431s - loss: 0.6928 - accuracy: 0.3083
Epoch 3/3
73371/73371 - 425s - loss: 0.6928 - accuracy: 0.2121
Epoch 3/3
73371/73371 - 435s - loss: 0.6935 - accuracy: 0.4692
Epoch 3/3
73371/73371 - 426s - loss: 0.6928 - accuracy: 0.4987
Epoch 3/3
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.4678
Epoch 3/3
73371/73371 - 434s - loss: 0.6929 - accuracy: 0.3646
Epoch 3/3
73371/73371 - 426s - loss: 0.6932 - accuracy: 0.4287
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.1314
Epoch 3/3
73371/73371 - 430s - loss: 0.6932 - accuracy: 0.4952
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.4973
Epoch 3/3
73371/73371 - 431s - loss: 0.6929 - accuracy: 0.4969
Epoch 3/3
73371/73371 - 431s - loss: 0.6928 - accuracy: 0.4982
Epoch 3/3
73371/73371 - 426s - loss: 0.6932 - accuracy: 0.4993
Epoch 3/3
73371/73371 - 431s - loss: 0.6929 - accuracy: 0.5005
Epoch 3/3
73371/73371 - 432s - loss: 0.6930 - accuracy: 0.5000
Epoch 3/3
73371/73371 - 428s - loss: 0.6935 - accuracy: 0.5002
Epoch 3/3
73371/73371 - 431s - loss: 0.6932 - accuracy: 0.4962
Epoch 3/3
73371/73371 - 431s - loss: 0.6928 - accuracy: 0.5000
Epoch 3/3
73371/73371 - 429s - loss: 0.6932 - accuracy: 0.5007
Epoch 3/3
73371/73371 - 435s - loss: 0.6933 - accuracy: 0.4996
Epoch 3/3
73371/73371 - 436s - loss: 7.2697 - accuracy: 0.9374
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.2697
Epoch 3/3
73371/73371 - 433s - loss: 0.6928 - accuracy: 0.2622
Epoch 3/3
73371/73371 - 437s - loss: 0.6928 - accuracy: 0.2716
Epoch 3/3
73371/73371 - 437s - loss: 0.6928 - accuracy: 0.2679
Epoch 3/3
73371/73371 - 436s - loss: 0.6928 - accuracy: 0.4430
Epoch 3/3
73371/73371 - 442s - loss: 0.6929 - accuracy: 0.2350
Epoch 3/3
73371/73371 - 439s - loss: 0.6928 - accuracy: 0.4178
Epoch 3/3
73371/73371 - 435s - loss: 0.6928 - accuracy: 0.4732
Epoch 3/3
73371/73371 - 440s - loss: 0.6928 - accuracy: 0.4280
Epoch 3/3
73371/73371 - 439s - loss: 0.6929 - accuracy: 0.3844
Epoch 3/3
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.3810
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.2650
73371/73371 - 423s - loss: 0.6928 - accuracy: 0.4239
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.4996
73371/73371 - 431s - loss: 0.6935 - accuracy: 0.4186
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.1873
73371/73371 - 426s - loss: 0.6931 - accuracy: 0.4998
73371/73371 - 430s - loss: 0.6928 - accuracy: 0.4905
73371/73371 - 427s - loss: 0.6932 - accuracy: 0.5002
73371/73371 - 429s - loss: 0.6928 - accuracy: 0.4856
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.4996
73371/73371 - 426s - loss: 0.6928 - accuracy: 0.5006
73371/73371 - 424s - loss: 0.6932 - accuracy: 0.5002
73371/73371 - 432s - loss: 0.6928 - accuracy: 0.4997
73371/73371 - 427s - loss: 0.6929 - accuracy: 0.5004
73371/73371 - 427s - loss: 0.6930 - accuracy: 0.3631
73371/73371 - 427s - loss: 0.6931 - accuracy: 0.4978
73371/73371 - 428s - loss: 0.6935 - accuracy: 0.4998
73371/73371 - 424s - loss: 0.6933 - accuracy: 0.4996
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.5000
73371/73371 - 425s - loss: 0.6932 - accuracy: 0.4998
73371/73371 - 424s - loss: 7.2699 - accuracy: 0.9374
24457/24457 - 75s
73371/73371 - 423s - loss: 0.6928 - accuracy: 0.3756
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.001, weight_constraint=4, total=22.3min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.1, weight_constraint=1 
Epoch 1/3
73371/73371 - 418s - loss: 0.6928 - accuracy: 0.3612
73371/73371 - 416s - loss: 0.6928 - accuracy: 0.2350
24457/24457 - 64s
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.001, weight_constraint=5, total=22.3min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.1, weight_constraint=2 
24457/24457 - 66s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.01, weight_constraint=5, total=22.2min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.1, weight_constraint=3 
Epoch 1/3
73371/73371 - 418s - loss: 0.6928 - accuracy: 0.3850
24457/24457 - 62s
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.1, weight_constraint=2, total=22.2min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.1, weight_constraint=4 
24457/24457 - 63s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.01, weight_constraint=1, total=22.5min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.1, weight_constraint=5 
24457/24457 - 61s
24457/24457 - 60s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.01, weight_constraint=4, total=22.3min
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.2, weight_constraint=1, total=22.2min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.2, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.2, weight_constraint=2 
Epoch 1/3
Epoch 1/3
24457/24457 - 60s
24457/24457 - 60s
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.01, weight_constraint=2, total=22.4min
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.1, weight_constraint=3, total=22.3min
24457/24457 - 60s
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.2, weight_constraint=3 
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.2, weight_constraint=4 
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.01, weight_constraint=3, total=22.4min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.2, weight_constraint=5 
Epoch 1/3
24457/24457 - 59s
24457/24457 - 60s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.1, weight_constraint=5, total=22.3min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.3, weight_constraint=1 
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.1, weight_constraint=1, total=22.4min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.3, weight_constraint=2 
Epoch 1/3
Epoch 1/3
24457/24457 - 59s
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.3, weight_constraint=1, total=22.2min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.3, weight_constraint=3 
24457/24457 - 58s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.1, weight_constraint=4, total=22.4min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.3, weight_constraint=4 
Epoch 1/3
24457/24457 - 61s
24457/24457 - 61s
24457/24457 - 59s
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.2, weight_constraint=3, total=22.4min
[CV] batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.3, weight_constraint=5 
24457/24457 - 59s
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.2, weight_constraint=4, total=22.4min
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.2, weight_constraint=2, total=22.5min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.001, weight_constraint=1 
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.001, weight_constraint=2 
24457/24457 - 60s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.3, weight_constraint=3, total=22.3min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.001, weight_constraint=3 
Epoch 1/3
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.3, weight_constraint=4, total=22.3min
24457/24457 - 60s
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.001, weight_constraint=4 
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.2, weight_constraint=5, total=22.4min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.001, weight_constraint=5 
Epoch 1/3
73371/73371 - 407s - loss: 0.6928 - accuracy: 0.2900
73371/73371 - 410s - loss: 0.6928 - accuracy: 0.2165
24457/24457 - 62s
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.3, weight_constraint=2, total=22.6min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.01, weight_constraint=1 
73371/73371 - 405s - loss: 0.6928 - accuracy: 0.4825
Epoch 1/3
24457/24457 - 64s
[CV]  batch_size=30, dropout_rate=0.5, epochs=3, learn_rate=0.3, weight_constraint=5, total=22.6min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.01, weight_constraint=2 
24457/24457 - 64s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.001, weight_constraint=1, total=22.6min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.01, weight_constraint=3 
Epoch 1/3
73371/73371 - 401s - loss: 0.6928 - accuracy: 0.2561
24457/24457 - 68s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.001, weight_constraint=3, total=22.5min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.01, weight_constraint=4 
Epoch 1/3
73371/73371 - 403s - loss: 0.6928 - accuracy: 0.0293
24457/24457 - 70s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.001, weight_constraint=2, total=22.7min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.01, weight_constraint=5 
Epoch 1/3
73371/73371 - 403s - loss: 0.6929 - accuracy: 0.4043
24457/24457 - 73s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.001, weight_constraint=4, total=22.8min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.1, weight_constraint=1 
Epoch 1/3
24457/24457 - 79s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.01, weight_constraint=1, total=22.8min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.1, weight_constraint=2 
Epoch 1/3
24457/24457 - 79s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.001, weight_constraint=5, total=22.9min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.1, weight_constraint=3 
Epoch 1/3
24457/24457 - 80s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.01, weight_constraint=2, total=22.8min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.1, weight_constraint=4 
Epoch 1/3
24457/24457 - 81s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.01, weight_constraint=4, total=22.7min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.1, weight_constraint=5 
Epoch 1/3
24457/24457 - 82s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.01, weight_constraint=3, total=22.9min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.2, weight_constraint=1 
Epoch 1/3
24457/24457 - 80s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.01, weight_constraint=5, total=22.8min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.2, weight_constraint=2 
Epoch 1/3
73371/73371 - 400s - loss: 0.6933 - accuracy: 0.4445
Epoch 2/3
73371/73371 - 407s - loss: 0.6929 - accuracy: 0.4910
Epoch 2/3
73371/73371 - 414s - loss: 0.6929 - accuracy: 0.4935
Epoch 2/3
73371/73371 - 413s - loss: 0.6932 - accuracy: 0.4781
Epoch 2/3
73371/73371 - 416s - loss: 0.6930 - accuracy: 0.4826
Epoch 2/3
73371/73371 - 416s - loss: 0.6932 - accuracy: 0.4897
Epoch 2/3
73371/73371 - 416s - loss: 0.6930 - accuracy: 0.4949
Epoch 2/3
73371/73371 - 421s - loss: 0.6934 - accuracy: 0.4873
Epoch 2/3
73371/73371 - 417s - loss: 0.6932 - accuracy: 0.4884
Epoch 2/3
73371/73371 - 417s - loss: 1.2599 - accuracy: 0.4531
Epoch 2/3
73371/73371 - 420s - loss: 0.6932 - accuracy: 0.4884
Epoch 2/3
73371/73371 - 420s - loss: 0.6931 - accuracy: 0.4948
Epoch 2/3
73371/73371 - 424s - loss: 0.6942 - accuracy: 0.4748
Epoch 2/3
73371/73371 - 422s - loss: 0.6934 - accuracy: 0.4911
Epoch 2/3
73371/73371 - 421s - loss: 0.6929 - accuracy: 0.3859
Epoch 2/3
73371/73371 - 421s - loss: 0.6931 - accuracy: 0.5181
Epoch 2/3
73371/73371 - 420s - loss: 0.6931 - accuracy: 0.3283
Epoch 2/3
73371/73371 - 421s - loss: 0.6929 - accuracy: 0.3630
Epoch 2/3
73371/73371 - 424s - loss: 0.6983 - accuracy: 0.4939
Epoch 2/3
73371/73371 - 425s - loss: 0.6932 - accuracy: 0.5097
Epoch 2/3
73371/73371 - 429s - loss: 0.6935 - accuracy: 0.4212
Epoch 2/3
73371/73371 - 427s - loss: 0.6931 - accuracy: 0.3629
Epoch 2/3
73371/73371 - 427s - loss: 0.6935 - accuracy: 0.4307
Epoch 2/3
73371/73371 - 427s - loss: 0.6929 - accuracy: 0.4468
Epoch 2/3
73371/73371 - 431s - loss: 0.6931 - accuracy: 0.3212
Epoch 2/3
73371/73371 - 434s - loss: 0.6931 - accuracy: 0.4741
Epoch 2/3
73371/73371 - 442s - loss: 0.6930 - accuracy: 0.4871
Epoch 2/3
73371/73371 - 438s - loss: 0.6932 - accuracy: 0.4863
Epoch 2/3
73371/73371 - 438s - loss: 0.6932 - accuracy: 0.4811
Epoch 2/3
73371/73371 - 437s - loss: 0.6932 - accuracy: 0.4800
Epoch 2/3
73371/73371 - 441s - loss: 0.6930 - accuracy: 0.4916
Epoch 2/3
73371/73371 - 443s - loss: 0.6930 - accuracy: 0.4864
Epoch 2/3
73371/73371 - 428s - loss: 0.6932 - accuracy: 0.4906
Epoch 3/3
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.4999
Epoch 3/3
73371/73371 - 430s - loss: 0.6929 - accuracy: 0.4932
Epoch 3/3
73371/73371 - 428s - loss: 0.6932 - accuracy: 0.3085
Epoch 3/3
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.4930
Epoch 3/3
73371/73371 - 432s - loss: 0.6929 - accuracy: 0.4974
Epoch 3/3
73371/73371 - 430s - loss: 0.6935 - accuracy: 0.4916
Epoch 3/3
73371/73371 - 433s - loss: 0.6929 - accuracy: 0.4998
Epoch 3/3
73371/73371 - 429s - loss: 0.6935 - accuracy: 0.4996
Epoch 3/3
73371/73371 - 431s - loss: 0.6931 - accuracy: 0.4984
Epoch 3/3
73371/73371 - 434s - loss: 0.6933 - accuracy: 0.4932
Epoch 3/3
73371/73371 - 431s - loss: 0.6929 - accuracy: 0.5002
Epoch 3/3
73371/73371 - 436s - loss: 0.6931 - accuracy: 0.4970
Epoch 3/3
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.1748
73371/73371 - 431s - loss: 0.6928 - accuracy: 0.2772
Epoch 3/3
Epoch 3/3
73371/73371 - 434s - loss: 0.6931 - accuracy: 0.4992
Epoch 3/3
73371/73371 - 431s - loss: 0.6929 - accuracy: 0.2760
Epoch 3/3
73371/73371 - 432s - loss: 0.6929 - accuracy: 0.1958
Epoch 3/3
73371/73371 - 434s - loss: 0.6932 - accuracy: 0.4707
Epoch 3/3
73371/73371 - 434s - loss: 0.6929 - accuracy: 0.3630
Epoch 3/3
73371/73371 - 434s - loss: 0.6934 - accuracy: 0.3999
Epoch 3/3
73371/73371 - 435s - loss: 0.6934 - accuracy: 0.1258
Epoch 3/3
73371/73371 - 439s - loss: 0.6929 - accuracy: 0.4022
Epoch 3/3
73371/73371 - 435s - loss: 0.6928 - accuracy: 0.2838
Epoch 3/3
73371/73371 - 435s - loss: 0.6929 - accuracy: 0.2962
Epoch 3/3
73371/73371 - 438s - loss: 0.6929 - accuracy: 0.4978
Epoch 3/3
73371/73371 - 437s - loss: 0.6931 - accuracy: 0.4967
Epoch 3/3
73371/73371 - 443s - loss: 0.6930 - accuracy: 0.4973
Epoch 3/3
73371/73371 - 439s - loss: 0.6932 - accuracy: 0.4572
Epoch 3/3
73371/73371 - 437s - loss: 0.6931 - accuracy: 0.4931
Epoch 3/3
73371/73371 - 440s - loss: 0.6929 - accuracy: 0.4983
Epoch 3/3
73371/73371 - 444s - loss: 0.6929 - accuracy: 0.4992
Epoch 3/3
73371/73371 - 431s - loss: 0.6931 - accuracy: 0.4625
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.5003
73371/73371 - 430s - loss: 0.6929 - accuracy: 0.3401
73371/73371 - 429s - loss: 0.6932 - accuracy: 0.4516
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.4994
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.4999
73371/73371 - 426s - loss: 0.6931 - accuracy: 0.5001
73371/73371 - 429s - loss: 0.6930 - accuracy: 0.4995
73371/73371 - 430s - loss: 0.6935 - accuracy: 0.4995
73371/73371 - 433s - loss: 0.6935 - accuracy: 0.5004
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.5006
73371/73371 - 430s - loss: 0.6929 - accuracy: 0.5000
73371/73371 - 426s - loss: 0.6928 - accuracy: 0.2837
73371/73371 - 428s - loss: 0.6928 - accuracy: 0.1120
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.1310
73371/73371 - 427s - loss: 0.6929 - accuracy: 0.2164
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.4989
73371/73371 - 431s - loss: 0.6931 - accuracy: 0.4997
73371/73371 - 429s - loss: 0.6929 - accuracy: 0.4994
73371/73371 - 427s - loss: 0.6928 - accuracy: 0.2273
24457/24457 - 78s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.1, weight_constraint=1, total=22.3min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.2, weight_constraint=3 
Epoch 1/3
73371/73371 - 423s - loss: 0.6934 - accuracy: 0.4770
73371/73371 - 421s - loss: 0.6933 - accuracy: 0.1181
24457/24457 - 70s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.1, weight_constraint=2, total=22.3min
73371/73371 - 422s - loss: 0.6929 - accuracy: 0.1614
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.2, weight_constraint=4 
Epoch 1/3
73371/73371 - 416s - loss: 0.6928 - accuracy: 0.4832
24457/24457 - 67s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.1, weight_constraint=3, total=22.4min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.2, weight_constraint=5 
24457/24457 - 65s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.1, weight_constraint=4, total=22.3min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.3, weight_constraint=1 
Epoch 1/3
73371/73371 - 412s - loss: 0.6928 - accuracy: 0.2368
24457/24457 - 66s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.1, weight_constraint=5, total=22.4min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.3, weight_constraint=2 
24457/24457 - 66s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.2, weight_constraint=2, total=22.4min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.3, weight_constraint=3 
Epoch 1/3
24457/24457 - 62s
24457/24457 - 63s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.2, weight_constraint=4, total=22.4min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.3, weight_constraint=4 
24457/24457 - 62s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.2, weight_constraint=5, total=22.4min
[CV] batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.3, weight_constraint=5 
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.3, weight_constraint=1, total=22.4min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.001, weight_constraint=1 
Epoch 1/3
Epoch 1/3
24457/24457 - 61s
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.2, weight_constraint=1, total=22.5min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.001, weight_constraint=2 
24457/24457 - 61s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.3, weight_constraint=3, total=22.4min
24457/24457 - 61s
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.001, weight_constraint=3 
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.2, weight_constraint=3, total=22.5min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.001, weight_constraint=4 
Epoch 1/3
73371/73371 - 408s - loss: 0.6929 - accuracy: 0.4980
24457/24457 - 61s
24457/24457 - 60s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.001, weight_constraint=1, total=22.4min
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.001, weight_constraint=4, total=22.4min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.001, weight_constraint=5 
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.01, weight_constraint=1 
24457/24457 - 62s
Epoch 1/3
24457/24457 - 59s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.001, weight_constraint=3, total=22.4min
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.3, weight_constraint=4, total=22.5min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.01, weight_constraint=2 
24457/24457 - 61s
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.01, weight_constraint=3 
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.001, weight_constraint=5, total=22.4min
Epoch 1/3
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.01, weight_constraint=4 
24457/24457 - 62s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.3, weight_constraint=2, total=22.6min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.01, weight_constraint=5 
Epoch 1/3
24457/24457 - 63s
24457/24457 - 63s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.001, weight_constraint=2, total=22.6min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.1, weight_constraint=1 
[CV]  batch_size=30, dropout_rate=0.6, epochs=3, learn_rate=0.3, weight_constraint=5, total=22.6min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.1, weight_constraint=2 
Epoch 1/3
Epoch 1/3
24457/24457 - 67s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.01, weight_constraint=1, total=22.6min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.1, weight_constraint=3 
Epoch 1/3
24457/24457 - 68s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.01, weight_constraint=3, total=22.6min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.1, weight_constraint=4 
73371/73371 - 406s - loss: 0.6932 - accuracy: 0.3339
Epoch 1/3
24457/24457 - 68s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.01, weight_constraint=2, total=22.7min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.1, weight_constraint=5 
Epoch 1/3
73371/73371 - 404s - loss: 0.6930 - accuracy: 0.4995
73371/73371 - 408s - loss: 0.6930 - accuracy: 0.1564
24457/24457 - 73s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.01, weight_constraint=4, total=22.6min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.2, weight_constraint=1 
73371/73371 - 404s - loss: 0.6931 - accuracy: 0.4907
Epoch 1/3
24457/24457 - 75s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.01, weight_constraint=5, total=22.6min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.2, weight_constraint=2 
Epoch 1/3
73371/73371 - 404s - loss: 0.6929 - accuracy: 0.4990
24457/24457 - 78s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.1, weight_constraint=1, total=22.7min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.2, weight_constraint=3 
Epoch 1/3
73371/73371 - 405s - loss: 0.6929 - accuracy: 0.4992
24457/24457 - 80s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.1, weight_constraint=3, total=22.8min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.2, weight_constraint=4 
Epoch 1/3
24457/24457 - 80s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.1, weight_constraint=2, total=22.9min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.2, weight_constraint=5 
Epoch 1/3
24457/24457 - 81s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.1, weight_constraint=4, total=22.8min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.3, weight_constraint=1 
Epoch 1/3
24457/24457 - 81s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.1, weight_constraint=5, total=22.7min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.3, weight_constraint=2 
Epoch 1/3
24457/24457 - 82s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.2, weight_constraint=1, total=22.9min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.3, weight_constraint=3 
Epoch 1/3
24457/24457 - 83s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.2, weight_constraint=2, total=23.0min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.3, weight_constraint=4 
Epoch 1/3
73371/73371 - 396s - loss: 0.6931 - accuracy: 0.4750
Epoch 2/3
73371/73371 - 405s - loss: 0.6930 - accuracy: 0.4923
Epoch 2/3
73371/73371 - 410s - loss: 0.6933 - accuracy: 0.4828
Epoch 2/3
73371/73371 - 410s - loss: 0.6956 - accuracy: 0.4922
Epoch 2/3
73371/73371 - 415s - loss: 0.6947 - accuracy: 0.4873
Epoch 2/3
73371/73371 - 412s - loss: 0.6933 - accuracy: 0.4930
Epoch 2/3
73371/73371 - 415s - loss: 0.6934 - accuracy: 0.4848
Epoch 2/3
73371/73371 - 416s - loss: 0.6932 - accuracy: 0.4141
Epoch 2/3
73371/73371 - 419s - loss: 0.6944 - accuracy: 0.4768
Epoch 2/3
73371/73371 - 418s - loss: 0.6931 - accuracy: 0.3762
Epoch 2/3
73371/73371 - 418s - loss: 0.6931 - accuracy: 0.3545
Epoch 2/3
73371/73371 - 419s - loss: 0.6932 - accuracy: 0.4228
Epoch 2/3
73371/73371 - 417s - loss: 0.6932 - accuracy: 0.4453
Epoch 2/3
73371/73371 - 420s - loss: 0.6933 - accuracy: 0.4775
Epoch 2/3
73371/73371 - 420s - loss: 0.6933 - accuracy: 0.2824
Epoch 2/3
73371/73371 - 419s - loss: 0.6933 - accuracy: 0.4016
Epoch 2/3
73371/73371 - 420s - loss: 0.6931 - accuracy: 0.4046
Epoch 2/3
73371/73371 - 419s - loss: 0.6934 - accuracy: 0.4181
Epoch 2/3
73371/73371 - 419s - loss: 0.6931 - accuracy: 0.4723
Epoch 2/3
73371/73371 - 422s - loss: 0.6932 - accuracy: 0.4731
Epoch 2/3
73371/73371 - 425s - loss: 0.6933 - accuracy: 0.4869
Epoch 2/3
73371/73371 - 430s - loss: 0.6931 - accuracy: 0.4865
Epoch 2/3
73371/73371 - 427s - loss: 0.6932 - accuracy: 0.4896
Epoch 2/3
73371/73371 - 427s - loss: 1.9560 - accuracy: 0.3740
Epoch 2/3
73371/73371 - 430s - loss: 0.6936 - accuracy: 0.4813
Epoch 2/3
73371/73371 - 428s - loss: 0.6933 - accuracy: 0.3057
Epoch 2/3
73371/73371 - 435s - loss: 0.6938 - accuracy: 0.4339
Epoch 2/3
73371/73371 - 438s - loss: 0.6940 - accuracy: 0.4836
Epoch 2/3
73371/73371 - 439s - loss: 0.6938 - accuracy: 0.4813
Epoch 2/3
73371/73371 - 437s - loss: 2.0734 - accuracy: 0.3610
Epoch 2/3
73371/73371 - 440s - loss: 2.0285 - accuracy: 0.4080
Epoch 2/3
73371/73371 - 446s - loss: 0.7010 - accuracy: 0.4626
Epoch 2/3
73371/73371 - 432s - loss: 0.6929 - accuracy: 0.4977
Epoch 3/3
73371/73371 - 428s - loss: 0.6929 - accuracy: 0.4998
Epoch 3/3
73371/73371 - 428s - loss: 0.6933 - accuracy: 0.4971
Epoch 3/3
73371/73371 - 429s - loss: 0.6931 - accuracy: 0.4991
Epoch 3/3
73371/73371 - 429s - loss: 0.6931 - accuracy: 0.4997
Epoch 3/3
73371/73371 - 433s - loss: 0.6936 - accuracy: 0.4986
Epoch 3/3
73371/73371 - 430s - loss: 0.6929 - accuracy: 0.1136
Epoch 3/3
73371/73371 - 435s - loss: 0.6930 - accuracy: 0.4989
Epoch 3/3
73371/73371 - 433s - loss: 0.6933 - accuracy: 0.4989
Epoch 3/3
73371/73371 - 433s - loss: 0.6929 - accuracy: 0.2595
Epoch 3/3
73371/73371 - 433s - loss: 0.6929 - accuracy: 0.1613
Epoch 3/3
73371/73371 - 433s - loss: 0.6930 - accuracy: 0.2021
Epoch 3/3
73371/73371 - 430s - loss: 0.6930 - accuracy: 0.4638
Epoch 3/3
73371/73371 - 430s - loss: 0.6931 - accuracy: 0.3925
Epoch 3/3
73371/73371 - 431s - loss: 0.6932 - accuracy: 0.2566
Epoch 3/3
73371/73371 - 435s - loss: 0.6930 - accuracy: 0.2225
Epoch 3/3
73371/73371 - 433s - loss: 0.6930 - accuracy: 0.3529
Epoch 3/3
73371/73371 - 432s - loss: 0.6932 - accuracy: 0.3243
Epoch 3/3
73371/73371 - 432s - loss: 0.6931 - accuracy: 0.4933
Epoch 3/3
73371/73371 - 434s - loss: 0.6931 - accuracy: 0.4970
Epoch 3/3
73371/73371 - 433s - loss: 0.6933 - accuracy: 0.4969
Epoch 3/3
73371/73371 - 438s - loss: 0.6931 - accuracy: 0.4604
Epoch 3/3
73371/73371 - 436s - loss: 0.6930 - accuracy: 0.4525
Epoch 3/3
73371/73371 - 435s - loss: 2.0999 - accuracy: 1.2857e-04
Epoch 3/3
73371/73371 - 438s - loss: 0.6934 - accuracy: 0.4956
Epoch 3/3
73371/73371 - 434s - loss: 0.6932 - accuracy: 0.5006
Epoch 3/3
73371/73371 - 437s - loss: 0.6936 - accuracy: 0.4997
Epoch 3/3
73371/73371 - 440s - loss: 0.6940 - accuracy: 0.4959
Epoch 3/3
73371/73371 - 439s - loss: 0.6935 - accuracy: 0.4997
Epoch 3/3
73371/73371 - 437s - loss: 3.2240 - accuracy: 0.1411
Epoch 3/3
73371/73371 - 440s - loss: 2.0984 - accuracy: 0.5934
Epoch 3/3
73371/73371 - 446s - loss: 0.6937 - accuracy: 0.4987
Epoch 3/3
73371/73371 - 430s - loss: 0.6929 - accuracy: 0.5005
73371/73371 - 427s - loss: 0.6930 - accuracy: 0.2520
73371/73371 - 427s - loss: 0.6982 - accuracy: 0.4983
73371/73371 - 429s - loss: 0.6933 - accuracy: 0.4982
73371/73371 - 428s - loss: 0.6931 - accuracy: 0.4998
73371/73371 - 428s - loss: 0.6936 - accuracy: 0.4994
73371/73371 - 428s - loss: 0.6929 - accuracy: 0.2310
73371/73371 - 430s - loss: 0.6930 - accuracy: 0.4998
73371/73371 - 431s - loss: 0.6934 - accuracy: 0.4987
73371/73371 - 428s - loss: 0.6929 - accuracy: 0.0749
73371/73371 - 427s - loss: 0.6929 - accuracy: 0.1599
73371/73371 - 428s - loss: 0.6929 - accuracy: 0.1903
73371/73371 - 425s - loss: 0.6930 - accuracy: 0.5002
73371/73371 - 426s - loss: 0.6930 - accuracy: 0.4329
73371/73371 - 425s - loss: 0.6930 - accuracy: 0.1434
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.2282
73371/73371 - 426s - loss: 0.6929 - accuracy: 0.3238
73371/73371 - 425s - loss: 0.6930 - accuracy: 0.1228
24457/24457 - 77s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.2, weight_constraint=3, total=22.3min
[CV] batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.3, weight_constraint=5 
73371/73371 - 427s - loss: 0.6931 - accuracy: 0.4967
Epoch 1/3
73371/73371 - 424s - loss: 0.6931 - accuracy: 0.4988
24457/24457 - 72s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.2, weight_constraint=4, total=22.3min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.001, weight_constraint=1 
Epoch 1/3
73371/73371 - 417s - loss: 0.6933 - accuracy: 0.4926
24457/24457 - 68s
24457/24457 - 69s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.2, weight_constraint=5, total=22.3min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.001, weight_constraint=2 
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.3, weight_constraint=1, total=22.3min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.001, weight_constraint=3 
Epoch 1/3
Epoch 1/3
73371/73371 - 415s - loss: 0.6932 - accuracy: 0.4890
73371/73371 - 420s - loss: 0.6929 - accuracy: 0.4995
73371/73371 - 412s - loss: 2.0988 - accuracy: 0.3118
24457/24457 - 67s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.3, weight_constraint=3, total=22.4min
24457/24457 - 63s
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.001, weight_constraint=4 
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.001, weight_constraint=1, total=22.4min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.001, weight_constraint=5 
Epoch 1/3
24457/24457 - 67s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.3, weight_constraint=2, total=22.5min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.01, weight_constraint=1 
Epoch 1/3
24457/24457 - 65s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.3, weight_constraint=5, total=22.4min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.01, weight_constraint=2 
Epoch 1/3
24457/24457 - 62s
[CV]  batch_size=30, dropout_rate=0.7, epochs=3, learn_rate=0.3, weight_constraint=4, total=22.5min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.01, weight_constraint=3 
24457/24457 - 64s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.001, weight_constraint=2, total=22.5min
24457/24457 - 62s
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.01, weight_constraint=4 
24457/24457 - 64s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.001, weight_constraint=3, total=22.5min
Epoch 1/3
24457/24457 - 62s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.001, weight_constraint=4, total=22.4min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.01, weight_constraint=5 
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.1, weight_constraint=1 
73371/73371 - 410s - loss: 0.6932 - accuracy: 0.4995
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.01, weight_constraint=2, total=22.3min
24457/24457 - 62s
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.1, weight_constraint=2 
Epoch 1/3
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.01, weight_constraint=3, total=22.3min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.1, weight_constraint=3 
24457/24457 - 62s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.01, weight_constraint=1, total=22.4min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.1, weight_constraint=4 
Epoch 1/3
24457/24457 - 61s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.001, weight_constraint=5, total=22.4min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.1, weight_constraint=5 
Epoch 1/3
73371/73371 - 408s - loss: 0.6931 - accuracy: 0.5002
24457/24457 - 63s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.01, weight_constraint=4, total=22.4min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.2, weight_constraint=1 
24457/24457 - 64s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.01, weight_constraint=5, total=22.4min
Epoch 1/3
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.2, weight_constraint=2 
Epoch 1/3
24457/24457 - 66s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.1, weight_constraint=2, total=22.5min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.2, weight_constraint=3 
24457/24457 - 66s
Epoch 1/3
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.1, weight_constraint=1, total=22.5min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.2, weight_constraint=4 
Epoch 1/3
24457/24457 - 71s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.1, weight_constraint=4, total=22.5min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.2, weight_constraint=5 
Epoch 1/3
24457/24457 - 71s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.1, weight_constraint=5, total=22.6min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.3, weight_constraint=1 
Epoch 1/3
73371/73371 - 401s - loss: 0.6937 - accuracy: 0.5003
24457/24457 - 72s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.1, weight_constraint=3, total=22.7min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.3, weight_constraint=2 
Epoch 1/3
24457/24457 - 74s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.2, weight_constraint=1, total=22.6min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.3, weight_constraint=3 
Epoch 1/3
73371/73371 - 402s - loss: 0.7640 - accuracy: 0.4880
73371/73371 - 403s - loss: 3.2211 - accuracy: 1.2630e-04
73371/73371 - 406s - loss: 0.6934 - accuracy: 0.5006
24457/24457 - 78s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.2, weight_constraint=2, total=22.7min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.3, weight_constraint=4 
Epoch 1/3
24457/24457 - 78s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.2, weight_constraint=3, total=22.6min
[CV] batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.3, weight_constraint=5 
Epoch 1/3
73371/73371 - 404s - loss: 2.0987 - accuracy: 0.4444
73371/73371 - 402s - loss: 0.6938 - accuracy: 0.4996
24457/24457 - 81s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.2, weight_constraint=4, total=22.7min
24457/24457 - 82s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.2, weight_constraint=5, total=22.8min
24457/24457 - 80s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.3, weight_constraint=2, total=22.7min
24457/24457 - 81s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.3, weight_constraint=1, total=22.8min
24457/24457 - 77s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.3, weight_constraint=3, total=22.8min
24457/24457 - 74s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.3, weight_constraint=4, total=22.9min
73371/73371 - 358s - loss: 1.5974 - accuracy: 0.1777
Epoch 2/3
73371/73371 - 359s - loss: 0.6932 - accuracy: 0.3818
Epoch 2/3
73371/73371 - 360s - loss: 0.6931 - accuracy: 0.3117
Epoch 2/3
73371/73371 - 363s - loss: 0.6932 - accuracy: 0.3815
Epoch 2/3
73371/73371 - 363s - loss: 0.6932 - accuracy: 0.4298
Epoch 2/3
73371/73371 - 363s - loss: 0.6931 - accuracy: 0.2726
Epoch 2/3
73371/73371 - 362s - loss: 0.6933 - accuracy: 0.4387
Epoch 2/3
73371/73371 - 366s - loss: 0.6932 - accuracy: 0.2453
Epoch 2/3
73371/73371 - 363s - loss: 0.6931 - accuracy: 0.3389
Epoch 2/3
73371/73371 - 366s - loss: 0.6932 - accuracy: 0.3916
Epoch 2/3
73371/73371 - 368s - loss: 0.6931 - accuracy: 0.4707
Epoch 2/3
73371/73371 - 365s - loss: 0.6934 - accuracy: 0.4738
Epoch 2/3
73371/73371 - 365s - loss: 0.6935 - accuracy: 0.4645
Epoch 2/3
73371/73371 - 363s - loss: 0.6934 - accuracy: 0.4639
Epoch 2/3
73371/73371 - 364s - loss: 0.6934 - accuracy: 0.4731
Epoch 2/3
73371/73371 - 362s - loss: 0.6949 - accuracy: 0.4023
Epoch 2/3
73371/73371 - 366s - loss: 0.6934 - accuracy: 0.4781
Epoch 2/3
73371/73371 - 367s - loss: 0.6934 - accuracy: 0.4777
Epoch 2/3
73371/73371 - 361s - loss: 1.7853 - accuracy: 0.2248
Epoch 2/3
73371/73371 - 365s - loss: 0.6945 - accuracy: 0.4688
Epoch 2/3
73371/73371 - 357s - loss: 1.2484 - accuracy: 0.4056
Epoch 2/3
73371/73371 - 361s - loss: 0.6990 - accuracy: 0.4850
Epoch 2/3
73371/73371 - 361s - loss: 1.9392 - accuracy: 0.4010
Epoch 2/3
73371/73371 - 363s - loss: 0.6941 - accuracy: 0.4871
Epoch 2/3
73371/73371 - 359s - loss: 0.7034 - accuracy: 0.4714
Epoch 2/3
73371/73371 - 356s - loss: 0.9502 - accuracy: 0.4832
Epoch 2/3
73371/73371 - 342s - loss: 2.0994 - accuracy: 0.0020
Epoch 3/3
73371/73371 - 343s - loss: 0.6930 - accuracy: 0.1805
Epoch 3/3
73371/73371 - 342s - loss: 0.6929 - accuracy: 0.2690
Epoch 3/3
73371/73371 - 343s - loss: 0.6929 - accuracy: 0.0577
Epoch 3/3
73371/73371 - 341s - loss: 0.6930 - accuracy: 0.2703
Epoch 3/3
73371/73371 - 342s - loss: 0.6930 - accuracy: 0.1933
Epoch 3/3
73371/73371 - 343s - loss: 0.6930 - accuracy: 0.1186
Epoch 3/3
73371/73371 - 342s - loss: 0.6930 - accuracy: 0.3029
Epoch 3/3
73371/73371 - 343s - loss: 0.6933 - accuracy: 0.0472
Epoch 3/3
73371/73371 - 342s - loss: 0.6935 - accuracy: 0.4897
Epoch 3/3
73371/73371 - 342s - loss: 0.6934 - accuracy: 0.4993
Epoch 3/3
73371/73371 - 346s - loss: 0.6930 - accuracy: 0.1261
Epoch 3/3
73371/73371 - 343s - loss: 0.6934 - accuracy: 0.4985
Epoch 3/3
73371/73371 - 348s - loss: 0.6930 - accuracy: 0.4594
Epoch 3/3
73371/73371 - 348s - loss: 0.6931 - accuracy: 0.3351
Epoch 3/3
73371/73371 - 342s - loss: 0.6933 - accuracy: 0.4997
Epoch 3/3
73371/73371 - 345s - loss: 0.6934 - accuracy: 0.4933
Epoch 3/3
73371/73371 - 348s - loss: 0.6932 - accuracy: 0.4995
Epoch 3/3
73371/73371 - 342s - loss: 2.0284 - accuracy: 0.1809
Epoch 3/3
73371/73371 - 349s - loss: 0.6944 - accuracy: 0.4921
Epoch 3/3
73371/73371 - 342s - loss: 1.3961 - accuracy: 0.5463
Epoch 3/3
73371/73371 - 345s - loss: 0.6934 - accuracy: 0.4979
Epoch 3/3
73371/73371 - 350s - loss: 2.0296 - accuracy: 0.2768
Epoch 3/3
73371/73371 - 350s - loss: 1.8731 - accuracy: 0.5776
Epoch 3/3
73371/73371 - 345s - loss: 0.6933 - accuracy: 0.5001
Epoch 3/3
73371/73371 - 344s - loss: 1.6190 - accuracy: 0.5370
Epoch 3/3
73371/73371 - 343s - loss: 1.3427 - accuracy: 0.2624
73371/73371 - 344s - loss: 0.6929 - accuracy: 0.0291
73371/73371 - 339s - loss: 0.6929 - accuracy: 0.0844
73371/73371 - 343s - loss: 0.6929 - accuracy: 0.2466
73371/73371 - 340s - loss: 0.6929 - accuracy: 0.2049
73371/73371 - 341s - loss: 0.6930 - accuracy: 0.0092
73371/73371 - 341s - loss: 0.6929 - accuracy: 0.0990
73371/73371 - 338s - loss: 0.6930 - accuracy: 0.2790
73371/73371 - 338s - loss: 0.6934 - accuracy: 0.0032
73371/73371 - 338s - loss: 0.6933 - accuracy: 0.4959
73371/73371 - 339s - loss: 0.6933 - accuracy: 0.2577
73371/73371 - 340s - loss: 0.6930 - accuracy: 0.0976
73371/73371 - 341s - loss: 0.6933 - accuracy: 0.4889
73371/73371 - 335s - loss: 0.6934 - accuracy: 0.4998
73371/73371 - 340s - loss: 0.6931 - accuracy: 0.4936
73371/73371 - 340s - loss: 0.6929 - accuracy: 0.3915
73371/73371 - 337s - loss: 0.6933 - accuracy: 0.4948
24457/24457 - 61s
[CV]  batch_size=30, dropout_rate=0.8, epochs=3, learn_rate=0.3, weight_constraint=5, total=18.5min
73371/73371 - 333s - loss: 2.0283 - accuracy: 1.0131e-04
73371/73371 - 335s - loss: 0.6951 - accuracy: 0.4941
24457/24457 - 56s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.001, weight_constraint=1, total=18.4min
73371/73371 - 335s - loss: 0.6942 - accuracy: 0.3875
24457/24457 - 54s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.001, weight_constraint=2, total=18.3min
73371/73371 - 328s - loss: 1.3930 - accuracy: 0.5447
24457/24457 - 51s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.001, weight_constraint=3, total=18.4min
73371/73371 - 323s - loss: 0.6933 - accuracy: 0.4984
24457/24457 - 48s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.001, weight_constraint=5, total=18.3min
24457/24457 - 48s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.01, weight_constraint=1, total=18.3min
24457/24457 - 48s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.001, weight_constraint=4, total=18.3min
73371/73371 - 318s - loss: 2.0295 - accuracy: 0.3446
24457/24457 - 46s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.01, weight_constraint=2, total=18.3min
24457/24457 - 43s
24457/24457 - 43s
73371/73371 - 317s - loss: 2.0282 - accuracy: 0.5881
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.1, weight_constraint=2, total=18.2min
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.1, weight_constraint=4, total=18.2min
24457/24457 - 43s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.1, weight_constraint=1, total=18.2min
24457/24457 - 42s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.01, weight_constraint=5, total=18.2min
24457/24457 - 41s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.1, weight_constraint=3, total=18.2min
24457/24457 - 42s
24457/24457 - 40s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.2, weight_constraint=2, total=18.1min
24457/24457 - 41s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.01, weight_constraint=4, total=18.3min
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.01, weight_constraint=3, total=18.3min
24457/24457 - 39s
73371/73371 - 309s - loss: 0.6933 - accuracy: 0.4998
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.1, weight_constraint=5, total=18.2min
24457/24457 - 38s
73371/73371 - 308s - loss: 0.6935 - accuracy: 0.4993
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.2, weight_constraint=4, total=18.0min
24457/24457 - 37s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.2, weight_constraint=1, total=18.2min
24457/24457 - 33s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.2, weight_constraint=3, total=18.1min
24457/24457 - 32s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.2, weight_constraint=5, total=17.7min
24457/24457 - 29s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.3, weight_constraint=1, total=17.7min
24457/24457 - 26s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.3, weight_constraint=2, total=17.7min
24457/24457 - 25s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.3, weight_constraint=3, total=17.7min
24457/24457 - 24s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.3, weight_constraint=4, total=17.4min
24457/24457 - 24s
[CV]  batch_size=30, dropout_rate=0.9, epochs=3, learn_rate=0.3, weight_constraint=5, total=17.3min
[Parallel(n_jobs=-1)]: Done 250 out of 250 | elapsed: 175.4min finished
2020-07-06 00:44:55.234366: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2020-07-06 00:44:55.234428: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-07-06 00:44:55.234466: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slave03): /proc/driver/nvidia/version does not exist
2020-07-06 00:44:55.272300: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1995010000 Hz
2020-07-06 00:44:55.275945: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7ff674000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-07-06 00:44:55.275986: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
Epoch 1/3
97828/97828 - 178s - loss: 0.6926 - accuracy: 0.4867
Epoch 2/3
97828/97828 - 177s - loss: 0.6925 - accuracy: 0.4997
Epoch 3/3
97828/97828 - 177s - loss: 0.6925 - accuracy: 0.5000
{'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
Best: 0.999957 using {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 1}
0.999800 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 3}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 3}
0.999957 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 2}
0.000003 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 3}
0.000003 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 4}
0.999940 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 3}
0.000003 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.0, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 2}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 2}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 2}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 3}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.1, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 2}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 3}
0.999942 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 2}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 3}
0.999827 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.2, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 2}
0.999922 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 5}
0.999834 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 3}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 4}
0.999809 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.3, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 2}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 3}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 1}
0.999816 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 3}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 4}
0.999950 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.4, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 5}
0.000003 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 2}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 3}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 2}
0.999840 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.5, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 2}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 5}
0.999956 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 3}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 5}
0.999938 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 3}
0.999816 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.6, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 5}
0.999956 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 3}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 1}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 3}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 2}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 2}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 3}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.7, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 5}
0.000003 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 1}
0.999834 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 3}
0.000153 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 2}
0.999792 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 3}
0.000134 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.8, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 1}
0.000014 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.001, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 1}
0.999956 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 4}
0.999942 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.01, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 1}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 2}
0.999828 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.1, 'weight_constraint': 5}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 1}
0.999819 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 2}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 3}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 4}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.2, 'weight_constraint': 5}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 1}
0.999840 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 2}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 3}
0.999806 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 4}
0.000000 (0.000000) with: {'batch_size': 30, 'dropout_rate': 0.9, 'epochs': 3, 'learn_rate': 0.3, 'weight_constraint': 5}
